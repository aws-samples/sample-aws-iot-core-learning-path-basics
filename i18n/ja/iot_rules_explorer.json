{
  "title": "⚙️ AWS IoT Rules Engine エクスプローラー",
  "separator": "============================================================",
  "aws_context_info": "🌍 AWS コンテキスト情報:",
  "account_id": "アカウントID",
  "region": "リージョン",
  "aws_context_error": "⚠️ AWSコンテキストを取得できませんでした:",
  "aws_credentials_reminder": "   AWS認証情報が設定されていることを確認してください",
  "description_intro": "このスクリプトはAWS IoT Rules Engineの概念を教えます:",
  "rules_concepts": [
    "• IoT Rules Engine SQL構文とメッセージルーティング",
    "• SELECT、FROM、WHERE句を使用したトピックフィルタリング", 
    "• 再公開アクションとIAMロール設定",
    "• ルールライフサイクル管理（作成、有効化、無効化、削除）",
    "• リアルタイムルールテストと検証",
    "• 各操作の完全なAPI詳細"
  ],
  "debug_enabled": "🔍 デバッグモード有効",
  "debug_features": [
    "• 拡張AWS IoT APIログ",
    "• 詳細なルールペイロードとIAM操作", 
    "• 拡張エラー診断"
  ],
  "tip": "💡 ヒント: 拡張ログには--debugまたは-dフラグを使用",
  "press_enter": "Enterキーを押して続行...",
  "goodbye": "👋 さようなら！",
  "main_menu": "📋 IoT Rules Engineメニュー:",
  "menu_options": [
    "1. すべてのIoTルールをリスト",
    "2. 特定のIoTルールを説明",
    "3. 新しいIoTルールを作成", 
    "4. サンプルメッセージでIoTルールをテスト",
    "5. IoTルールを管理（有効化/無効化/削除）",
    "6. 終了"
  ],
  "select_option": "オプションを選択 (1-6): ",
  "invalid_choice": "❌ 無効な選択です。1-6を選択してください。",
  "learning_moments": {
    "rules_foundation": {
      "title": "📚 学習ポイント: IoT Rules Engine",
      "content": "AWS IoT Rules Engineは、SQLライクなクエリを使用してデバイスからのメッセージを処理およびルーティングします。ルールは、Lambda、DynamoDB、S3などのさまざまなAWSサービスにメッセージをフィルタリング、変換、ルーティングできます。これにより、デバイス側のロジック変更を必要とせずに、リアルタイムデータ処理、アラート、より広範なAWSアーキテクチャとの統合が可能になります。",
      "next": "メッセージ処理のためのIoTルールを作成および管理します"
    },
    "rules_inventory": {
      "title": "📚 学習ポイント: ルールインベントリと管理", 
      "content": "IoTルールをリストすることで、アカウントで現在アクティブなすべてのメッセージ処理ロジックが表示されます。各ルールには名前、SQL文、アクションがあります。このインベントリは、データフローの理解、未使用ルールの特定、IoTメッセージ処理パイプラインの効果的な管理に役立ちます。",
      "next": "アカウント内のすべてのIoTルールをリストします"
    },
    "rule_analysis": {
      "title": "📚 学習ポイント: ルール分析とトラブルシューティング",
      "content": "ルールを説明すると、SQLクエリ、アクション、メタデータを含む完全な設定が明らかになります。この詳細ビューは、メッセージルーティングの問題のトラブルシューティング、ルールロジックの理解、ルールがユースケースに対して正しく設定されていることの確認に不可欠です。",
      "next": "特定のルールの設定を調査します"
    },
    "rule_creation": {
      "title": "📚 学習ポイント: ルール作成とメッセージルーティング",
      "content": "IoTルールの作成は、デバイスからのメッセージがどのように処理およびルーティングされるかを定義します。ルールはSQLライクな構文を使用してメッセージをフィルタリングおよび変換し、データの保存、関数の呼び出し、通知の送信などのアクションをトリガーします。これにより、デバイス側の変更なしにリアルタイムデータ処理が可能になります。",
      "next": "SQLとアクションを使用して新しいIoTルールを作成します"
    },
    "rule_testing": {
      "title": "📚 学習ポイント: ルールテストと検証",
      "content": "サンプルメッセージでルールをテストすることで、SQLロジックを検証し、本番環境にデプロイする前にルールが期待通りに動作することを確認できます。これにより、フィルタリングエラー、構文の問題、メッセージ処理の失敗や予期しない動作を引き起こす可能性のあるロジックの問題を発見できます。",
      "next": "サンプルMQTTメッセージでルールをテストします"
    },
    "rule_lifecycle": {
      "title": "📚 学習ポイント: ルールライフサイクル操作",
      "content": "ルールの管理には、有効化、無効化、削除が含まれます。ルールを無効化すると、設定を失うことなくメッセージ処理が停止し、削除すると永続的に削除されます。このライフサイクル管理は、IoTデータ処理パイプラインの維持、更新、トラブルシューティングに重要です。",
      "next": "ルールの状態とライフサイクルを管理します"
    }
  },
  "workflow_titles": {
    "list_rules": "📋 IoTルールリストワークフロー",
    "describe_rule": "🔍 IoTルール説明ワークフロー", 
    "create_rule": "🔧 IoTルール作成ワークフロー",
    "test_rule": "🧪 IoTルールテストワークフロー",
    "manage_rule": "⚙️ IoTルール管理ワークフロー"
  },
  "aws_context_info_label": "🌍 AWSコンテキスト情報:",
  "account_id_label": "アカウントID",
  "region_label": "リージョン",
  "aws_context_error_msg": "⚠️ AWSコンテキストを取得できませんでした:",
  "aws_credentials_config": "   AWS認証情報が設定されていることを確認してください",
  "main_title": "⚙️ AWS IoT Rules Engine エクスプローラー",
  "aws_config_title": "📍 AWS設定:",
  "main_description": "実践的なルール作成と管理を通じてAWS IoT Rules Engineを学習します。",
  "main_features": "このツールは以下を実演します:",
  "feature_sql_syntax": "• IoT Rules Engine SQL構文とメッセージルーティング",
  "feature_topic_filtering": "• SELECT、FROM、WHERE句を使用したトピックフィルタリング",
  "feature_republish_actions": "• 再公開アクションとIAMロール設定", 
  "feature_lifecycle": "• ルールライフサイクル管理（作成、有効化、無効化、削除）",
  "learning_moment_title": "📚 学習ポイント: IoT Rules Engine",
  "learning_moment_description": "AWS IoT Rules Engineは、SQLライクなクエリを使用してデバイスからのメッセージを処理およびルーティングします。ルールは、Lambda、DynamoDB、S3などのさまざまなAWSサービスにメッセージをフィルタリング、変換、ルーティングできます。これにより、デバイス側のロジック変更を必要とせずに、リアルタイムデータ処理、アラート、より広範なAWSアーキテクチャとの統合が可能になります。",
  "next_action": "🔄 次: メッセージ処理のためのIoTルールを作成および管理します",
  "press_enter_continue": "Enterキーを押して続行...",
  "debug_mode_enabled": "🔍 デバッグモード有効",
  "debug_features_list": [
    "• 拡張AWS IoT APIログ",
    "• 詳細なルールペイロードとIAM操作",
    "• 拡張エラー診断"
  ],
  "debug_tip": "💡 ヒント: 拡張ログには--debugまたは-dフラグを使用",
  "menu_title": "📋 IoT Rules Engineメニュー:",
  "menu_option_1": "1. すべてのIoTルールをリスト",
  "menu_option_2": "2. 特定のIoTルールを説明", 
  "menu_option_3": "3. 新しいIoTルールを作成",
  "menu_option_4": "4. サンプルメッセージでIoTルールをテスト",
  "menu_option_5": "5. IoTルールを管理（有効化/無効化/削除）",
  "menu_option_6": "6. 終了",
  "press_enter_menu": "Enterキーを押して続行...",
  "learning_moment_inventory": "📚 学習ポイント: ルールインベントリと管理",
  "learning_moment_inventory_desc": "IoTルールをリストすることで、アカウントで現在アクティブなすべてのメッセージ処理ロジックが表示されます。各ルールには名前、SQL文、アクションがあります。このインベントリは、データフローの理解、未使用ルールの特定、IoTメッセージ処理パイプラインの効果的な管理に役立ちます。",
  "next_list_rules": "🔄 次: アカウント内のすべてのIoTルールをリストします",
  "learning_moment_analysis": "📚 学習ポイント: ルール分析とトラブルシューティング",
  "learning_moment_analysis_desc": "ルールを説明すると、SQLクエリ、アクション、メタデータを含む完全な設定が明らかになります。この詳細ビューは、メッセージルーティングの問題のトラブルシューティング、ルールロジックの理解、ルールがユースケースに対して正しく設定されていることの確認に不可欠です。",
  "next_examine_rule": "🔄 次: 特定のルールの設定を調査します",
  "learning_moment_creation": "📚 学習ポイント: ルール作成とメッセージルーティング",
  "learning_moment_creation_desc": "IoTルールの作成は、デバイスからのメッセージがどのように処理およびルーティングされるかを定義します。ルールはSQLライクな構文を使用してメッセージをフィルタリングおよび変換し、データの保存、関数の呼び出し、通知の送信などのアクションをトリガーします。これにより、デバイス側の変更なしにリアルタイムデータ処理が可能になります。",
  "next_create_rule": "🔄 次: SQLとアクションを使用して新しいIoTルールを作成します",
  "learning_moment_testing": "📚 学習ポイント: ルールテストと検証",
  "learning_moment_testing_desc": "サンプルメッセージでルールをテストすることで、SQLロジックを検証し、本番環境にデプロイする前にルールが期待通りに動作することを確認できます。これにより、フィルタリングエラー、構文の問題、メッセージ処理の失敗や予期しない動作を引き起こす可能性のあるロジックの問題を発見できます。",
  "next_test_rule": "🔄 次: サンプルMQTTメッセージでルールをテストします",
  "learning_moment_lifecycle": "📚 学習ポイント: ルールライフサイクル操作", 
  "learning_moment_lifecycle_desc": "ルールの管理には、有効化、無効化、削除が含まれます。ルールを無効化すると、設定を失うことなくメッセージ処理が停止し、削除すると永続的に削除されます。このライフサイクル管理は、IoTデータ処理パイプラインの維持、更新、トラブルシューティングに重要です。",
  "next_manage_rule": "🔄 次: ルールの状態とライフサイクルを管理します",
  "debug_operation": "🔍 DEBUG: {operation}",
  "debug_input": "📥 入力: {input}",
  "debug_completed": "✅ {operation} 完了",
  "debug_output": "📤 出力: {output}",
  "debug_error_code": "🔍 DEBUG: エラーコード: {code}",
  "list_rules_title": "IoTルールをリスト",
  "no_rules_found": "📋 アカウントにIoTルールが見つかりません",
  "create_first_rule": "💡 オプション3を使用して最初のルールを作成してください",
  "found_rules": "📋 {count}個のIoTルールが見つかりました:",
  "rule_status_disabled": "🔴 無効",
  "rule_status_enabled": "🟢 有効", 
  "created_label": "📅 作成日: {date}",
  "debug_rule_arn": "🔍 DEBUG: ルールARN: {arn}",
  "sql_label": "📝 SQL: {sql}",
  "actions_count": "🎯 アクション: {count}個設定済み",
  "action_republish": "再公開先: {topic}",
  "action_s3": "S3バケット: {bucket}",
  "action_lambda": "Lambda: {function}",
  "describe_rule_title": "IoTルールを説明",
  "list_rules_for_selection": "選択用IoTルールをリスト",
  "available_rules": "📋 利用可能なルール:",
  "select_rule_describe": "説明するルールを選択 (1-{count}): ",
  "invalid_selection_range": "❌ 無効な選択です。1-{count}を入力してください",
  "enter_valid_number": "❌ 有効な数値を入力してください",
  "rule_details_title": "📋 ルール詳細: {name}",
  "sql_statement_label": "📝 SQL文:",
  "sql_breakdown_label": "📖 SQL内訳:",
  "select_clause": "🔍 SELECT: {clause}",
  "from_clause": "📥 FROM: {clause}",
  "where_clause": "🔍 WHERE: {clause}",
  "actions_title": "🎯 アクション ({count}):",
  "action_type": "アクションタイプ: {type}",
  "target_topic": "📤 ターゲットトピック: {topic}",
  "role_arn": "🔑 ロールARN: {arn}",
  "qos_label": "🏷️  QoS: {qos}",
  "bucket_label": "🪣 バケット: {bucket}",
  "key_label": "📁 キー: {key}",
  "function_arn": "⚡ 関数ARN: {arn}",
  "error_action_title": "❌ エラーアクション:",
  "error_action_type": "タイプ: {type}",
  "error_action_topic": "トピック: {topic}",
  "rule_metadata_title": "📊 ルールメタデータ:",
  "rule_status": "🔄 ステータス: {status}",
  "rule_created": "📅 作成日: {date}",
  "debug_complete_payload": "🔍 DEBUG: 完全なルールペイロード:",
  "create_rule_title": "IoTルールを作成",
  "create_learning_objectives": "🎓 学習目標:",
  "objective_sql_syntax": "• IoT Rules Engine SQL構文の理解",
  "objective_topic_filtering": "• トピックフィルタリングとメッセージルーティングの学習",
  "objective_sql_clauses": "• SELECT、FROM、WHERE句の練習",
  "objective_republish_actions": "• 適切なIAMロールでの再公開アクションの設定",
  "enter_rule_name": "📝 ルール名を入力（英数字とアンダースコアのみ）: ",
  "invalid_rule_name": "❌ ルール名は英数字とアンダースコアのみ含むことができます",
  "rule_name_confirmed": "✅ ルール名: {name}",
  "enter_rule_description": "📖 ルール説明を入力（オプション）: ",
  "default_rule_description": "IoTメッセージ処理のための学習ルール",
  "rule_description_confirmed": "✅ ルール説明: {description}",
  "building_sql_title": "📖 IoT Rules Engine用SQL文の構築",
  "sql_template": "💡 テンプレート: SELECT <属性> FROM '<トピックパターン>' WHERE <条件>",
  "topic_configuration_title": "📡 トピックパターン設定",
  "topic_option_template": "1. 定義済みテンプレートを使用: testRulesEngineTopic/<deviceId>/<eventType>",
  "topic_option_custom": "2. カスタムトピックパターンを定義",
  "select_topic_option": "トピック設定を選択 (1-2): ",
  "available_event_types": "🎯 利用可能なイベントタイプ:",
  "custom_event_type": "カスタムイベントタイプ",
  "select_event_type": "イベントタイプを選択 (1-{count}): ",
  "enter_custom_event_type": "カスタムイベントタイプを入力: ",
  "event_type_empty": "❌ イベントタイプは空にできません",
  "invalid_event_selection": "❌ 無効な選択",
  "enter_custom_topic": "📝 カスタムトピックパターンを入力（ワイルドカードには+を使用）: ",
  "custom_topic_examples": "💡 例: 'sensors/+/data', 'devices/+/telemetry/+', 'factory/floor1/+/status'",
  "custom_topic_empty": "❌ トピックパターンは空にできません",
  "topic_pattern_confirmed": "✅ トピックパターン: {pattern}",
  "select_clause_title": "🔍 SELECT句 - {event_type}イベントの属性:",
  "custom_selection": "カスタム選択",
  "select_attributes": "属性を選択 (1-{count}): ",
  "enter_custom_select": "カスタムSELECT句を入力: ",
  "select_clause_empty": "❌ SELECT句は空にできません",
  "select_clause_confirmed": "✅ SELECT: {clause}",
  "where_clause_title": "🔍 WHERE句（オプション） - {event_type}メッセージをフィルタ:",
  "where_examples_title": "💡 {event_type}の例:",
  "add_where_condition": "WHERE条件を追加しますか？ (y/N): ",
  "enter_where_condition": "WHERE条件を入力: ",
  "where_clause_confirmed": "✅ WHERE: {clause}",
  "empty_where_warning": "⚠️ 空のWHERE句、フィルタなしで続行",
  "complete_sql_title": "📝 完全なSQL文:",
  "input_validation_error": "❌ 入力検証エラー: {error}",
  "validation_tip": "💡 英数字、スペース、基本演算子のみを使用してください",
  "republish_config_title": "📤 再公開アクション設定",
  "enter_target_topic": "再公開のターゲットトピックを入力（例: 'processed/temperature'）: ",
  "default_target_topic": "✅ デフォルトターゲットトピックを使用: {topic}",
  "iam_role_setup": "🔑 ルールアクション用IAMロールの設定",
  "iam_role_failed": "❌ IAMロールの作成/確認に失敗しました。ルールを作成できません。",
  "creating_rule": "🔧 IoTルールを作成中...",
  "debug_rule_payload": "🔍 DEBUG: ルールペイロード:",
  "create_rule_attempt": "IoTルール '{name}' を作成（試行 {attempt}/{max_attempts}）",
  "iam_propagation_wait": "⏳ IAMロールがまだ伝播中の可能性があります。再試行前に10秒待機中...",
  "create_rule_failed": "❌ {attempts}回の試行後にルール作成に失敗しました",
  "rule_created_success": "🎉 ルール '{name}' が正常に作成されました！",
  "rule_summary_title": "📋 ルール概要:",
  "summary_name": "📝 名前: {name}",
  "summary_source_topic": "📥 ソーストピック: {topic}",
  "summary_target_topic": "📤 ターゲットトピック: {topic}",
  "summary_sql": "🔍 SQL: {sql}",
  "summary_role": "🔑 ロール: {role}",
  "testing_rule_title": "💡 ルールのテスト:",
  "testing_step_1": "1. メッセージを公開: {source_topic}",
  "testing_step_2": "2. 購読: {target_topic}",
  "testing_step_3": "3. メッセージが正しくルーティングされるかを確認",
  "example_test_message": "📖 テストメッセージの例:",
  "debug_existing_role": "🔍 DEBUG: 既存のIAMロールを使用: {arn}",
  "using_existing_role": "✅ 既存のIAMロールを使用: {name}",
  "creating_iam_role": "🔧 IAMロールを作成: {name}",
  "error_checking_role": "❌ IAMロール確認エラー: {error}",
  "create_iam_role_operation": "IAMロール '{name}' を作成",
  "create_iam_policy_operation": "IAMポリシー '{name}' を作成",
  "attach_policy_operation": "ポリシーをロールにアタッチ",
  "iam_role_created_success": "✅ IAMロールとポリシーが正常に作成されました",
  "iam_role_propagation": "⏳ IAMロールの伝播を待機中（10秒）...",
  "manage_rule_title": "IoTルールを管理",
  "list_rules_for_management": "管理用IoTルールをリスト",
  "select_rule_manage": "管理するルールを選択 (1-{count}): ",
  "managing_rule": "🔧 ルールを管理中: {name}",
  "current_status": "📊 現在のステータス: {status}",
  "management_options": "📋 管理オプション:",
  "enable_rule": "1. 🟢 ルールを有効化",
  "disable_rule": "1. 🔴 ルールを無効化",
  "delete_rule": "2. 🗑️ ルールを削除",
  "cancel_management": "3. ↩️ キャンセル",
  "select_action": "アクションを選択 (1-3): ",
  "invalid_action_selection": "❌ 無効な選択です。1-3を入力してください",
  "get_current_rule_settings": "現在のルール設定を取得",
  "enable_rule_operation": "ルール '{name}' を有効化",
  "disable_rule_operation": "ルール '{name}' を無効化",
  "rule_status_updated": "✅ ルール '{name}' は現在 {status} です",
  "failed_get_rule_settings": "❌ '{name}' の現在のルール設定の取得に失敗しました",
  "confirm_delete_rule": "⚠️ ルール '{name}' を削除してもよろしいですか？ (y/N): ",
  "delete_rule_operation": "ルール '{name}' を削除",
  "rule_deleted_success": "✅ ルール '{name}' が正常に削除されました",
  "rule_deletion_cancelled": "❌ ルール削除がキャンセルされました",
  "management_cancelled": "↩️ 管理がキャンセルされました",
  "test_rule_title": "IoTルールをテスト",
  "test_learning_objectives": "🎓 学習目標:",
  "test_objective_1": "• ルールトピックマッチングとWHERE条件のテスト",
  "test_objective_2": "• メッセージルーティング動作の理解",
  "test_objective_3": "• マッチするメッセージとマッチしないメッセージでの練習",
  "test_objective_4": "• リアルタイムルール処理の観察",
  "list_rules_for_testing": "テスト用IoTルールをリスト",
  "no_rules_for_testing": "📋 IoTルールが見つかりません",
  "create_rule_first": "💡 まずオプション3を使用してルールを作成してください",
  "select_rule_test": "テストするルールを選択 (1-{count}): ",
  "get_rule_details_testing": "テスト用ルール詳細を取得",
  "testing_rule": "📋 ルールをテスト中: {name}",
  "sql_display": "📝 SQL: {sql}",
  "source_topic_pattern": "📥 ソーストピックパターン: {pattern}",
  "where_condition_display": "🔍 WHERE条件: {condition}",
  "target_topics_display": "📤 ターゲットトピック: {topics}",
  "finding_devices_certificates": "🔍 証明書付きデバイスを検索中...",
  "no_certificates_directory": "❌ 証明書ディレクトリが見つかりません。",
  "run_certificate_manager": "💡 まずcertificate_manager.pyを実行して証明書を作成してください",
  "no_devices_certificates": "❌ 証明書付きデバイスが見つかりません。",
  "found_devices_certificates": "📋 証明書付きデバイスが{count}個見つかりました:",
  "using_device": "✅ デバイスを使用: {name}",
  "selected_device": "✅ 選択されたデバイス: {name}",
  "select_device": "デバイスを選択 (1-{count}): ",
  "invalid_device_selection": "❌ 無効な選択",
  "get_iot_endpoint": "IoTエンドポイントを取得",
  "cannot_get_endpoint": "❌ IoTエンドポイントを取得できません。テストにはMQTT接続が必要です。",
  "interactive_testing_title": "🧪 インタラクティブルールテスト",
  "connecting_to_endpoint": "📡 接続中: {endpoint}",
  "using_device_info": "📱 デバイスを使用: {device}",
  "connecting_aws_iot": "🔌 AWS IoTに接続中...",
  "connected_aws_iot": "✅ AWS IoTに接続されました",
  "subscribed_target_topic": "📡 ターゲットトピックに購読: {topic}",
  "rule_testing_instructions": "🎯 ルールテスト手順:",
  "instruction_1": "• 各メッセージがルールにマッチするかどうか質問されます",
  "instruction_2": "• トピックマッチング: トピックがパターンに適合するか？",
  "instruction_3": "• WHERE条件: メッセージ内容がフィルタにマッチするか？",
  "instruction_4": "• ターゲットトピックでルール出力メッセージを監視",
  "instruction_5": "• テストを終了するには 'quit' と入力",
  "test_message_header": "🧪 テストメッセージ #{count}",
  "topic_pattern_display": "📥 トピックパターン: {pattern}",
  "no_specific_pattern": "特定のパターンなし",
  "should_match_topic": "このメッセージはトピックパターンにマッチすべきですか？ (y/N/quit): ",
  "generated_topic": "📡 生成されたトピック: {topic}",
  "where_condition_label": "🔍 WHERE条件: {condition}",
  "should_match_where": "このメッセージはWHERE条件にマッチすべきですか？ (y/n): ",
  "test_message_display": "📝 テストメッセージ:",
  "topic_label": "📡 トピック: {topic}",
  "payload_label": "💬 ペイロード: {payload}",
  "prediction_should_trigger": "🔮 予測: ルールがトリガーされるべき",
  "prediction_should_not_trigger": "🔮 予測: ルールはトリガーされるべきではない",
  "publishing_test_message": "📤 テストメッセージを公開中...",
  "waiting_rule_processing": "⏳ ルール処理のため3秒待機中...",
  "expected_trigger_no_output": "⚠️ ルールがトリガーされることを期待しましたが出力を受信しませんでした",
  "unexpected_trigger": "⚠️ ルールが予期せずトリガーされました",
  "rule_triggered_expected": "✅ ルールが期待通りにトリガーされました！",
  "rule_correctly_not_triggered": "✅ ルールが正しくトリガーされませんでした",
  "press_enter_next_test": "次のテストに続行するにはEnterキーを押してください...",
  "testing_error": "❌ テストエラー: {error}",
  "disconnecting_aws_iot": "🔌 AWS IoTから切断中...",
  "disconnected_aws_iot": "✅ AWS IoTから切断されました",
  "rule_output_received": "🔔 ルール出力を受信 [{timestamp}]",
  "message_topic": "📤 トピック: {topic}",
  "message_content": "💬 メッセージ: {message}",
  "rule_processed_forwarded": "✅ ルール '{name}' がメッセージを処理して転送しました！",
  "connection_interrupted": "⚠️ 接続が中断されました: {error}",
  "connection_resumed": "✅ 接続が再開されました",
  "operation_failed": "❌ {operation} が失敗しました: {error}",
  "unexpected_error": "❌ 予期しないエラー: {error}",
  "interrupted_by_user": "🛑 ユーザーによって中断されました",
  "invalid_characters_clause": "{clause_type}句に無効な文字があります。英数字、スペース、基本演算子のみが許可されています。",
  "dangerous_pattern_detected": "{clause_type}句で潜在的に危険なパターン '{pattern}' が検出されました。",
  "invalid_characters_topic": "トピックパターンに無効な文字があります。英数字、ハイフン、アンダースコア、スラッシュ、+ワイルドカードのみが許可されています。",
  "header_separator": "============================================================",
  "step_separator": "----------------------------------------------------",
  "rule_separator": "----------------------------------------"
}