{
  "title": "📡 AWS IoT MQTT WebSocket 探索器",
  "separator": "============================================================",
  "description_intro": "使用 SigV4 认证的 WebSocket 连接的教育性 MQTT 客户端。",
  "debug_enabled": "🔍 调试模式已启用",
  "debug_features": [
    "• 增强的 API 请求/响应日志记录",
    "• 完整的错误详细信息和回溯",
    "• 扩展的教育信息"
  ],
  "tip": "💡 提示：使用 --debug 或 -d 标志进行增强的 API 日志记录",
  "websocket_endpoint_discovery": "🌐 AWS IoT WebSocket 端点发现",
  "endpoint_type": "端点类型：iot:Data-ATS（推荐）",
  "endpoint_url": "端点 URL",
  "port": "端口：443（HTTPS/WebSocket）",
  "protocol": "协议：使用 SigV4 的 WebSocket 上的 MQTT",
  "error_getting_endpoint": "❌ 获取 IoT 端点时出错：",
  "no_aws_credentials": "❌ 未找到 AWS 凭证",
  "credentials_help": "💡 使用以下方法之一设置凭证：",
  "credentials_methods": [
    "• AWS CLI：aws configure",
    "• 环境变量：AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY",
    "• IAM 角色（如果在 EC2 上运行）"
  ],
  "aws_credentials_sigv4": "🔐 用于 SigV4 认证的 AWS 凭证",
  "access_key": "访问密钥",
  "region": "区域",
  "session_token": "会话令牌",
  "present": "存在",
  "not_present": "不存在",
  "error_getting_credentials": "❌ 获取 AWS 凭证时出错：",
  "connection_interrupted": "连接中断",
  "error": "错误",
  "timestamp": "时间戳",
  "auto_reconnect": "自动重连：AWS IoT SDK 将自动尝试重新连接",
  "connection_resumed": "连接已恢复",
  "return_code": "返回代码",
  "session_present": "会话存在",
  "status": "状态：连接已成功恢复",
  "resubscribing_topics": "🔄 重新连接后重新订阅 {} 个主题...",
  "resubscribed_success": "✅ 重新订阅 {} (QoS {})",
  "resubscribe_failed": "❌ 重新订阅失败 {}: {}",
  "incoming_message": "🔔 传入消息 #{} [{}]",
  "topic": "📥 主题",
  "qos": "🏷️  QoS",
  "qos_descriptions": {
    "0": "最多一次",
    "1": "至少一次",
    "2": "恰好一次"
  },
  "payload_size": "📊 负载大小",
  "transport": "🌐 传输：使用 SigV4 的 WebSocket",
  "flags": "🚩 标志",
  "duplicate_flag": "🔄 重复（重传）",
  "retain_flag": "📌 保留（由代理存储）",
  "mqtt5_properties": "🔧 MQTT5 属性：",
  "content_type": "📄 内容类型",
  "correlation_data": "🔗 关联数据",
  "message_expiry": "⏰ 消息过期",
  "response_topic": "↩️  响应主题",
  "payload_format": "📝 负载格式",
  "user_properties": "🏷️  用户属性",
  "message_payload": "💬 消息负载：",
  "json_format": "📋 JSON 格式：",
  "text_format": "📝 文本：",
  "message_encoding_error": "❌ 消息编码错误：",
  "json_parsing_error": "❌ 消息中的 JSON 解析错误：",
  "message_attribute_error": "❌ 消息属性错误：",
  "unexpected_message_error": "❌ 处理接收消息时出现意外错误：",
  "establishing_connection": "建立 WebSocket 上的 MQTT 连接",
  "websocket_connection_params": "🔗 WebSocket 连接参数：",
  "client_id": "客户端 ID",
  "endpoint": "端点",
  "port_443": "端口：443",
  "protocol_mqtt311": "协议：WebSocket 上的 MQTT 3.1.1",
  "authentication": "认证：AWS SigV4",
  "connecting_websocket": "🔄 通过 WebSocket 连接到 AWS IoT Core...",
  "websocket_connection_established": "WEBSOCKET 连接已建立",
  "connection_status": "状态：已成功连接到 AWS IoT Core",
  "transport_websocket": "传输：HTTPS 上的 WebSocket（端口 443）",
  "clean_session": "清洁会话：真",
  "keep_alive": "保持活动：30 秒",
  "tls_version": "TLS 版本：1.2",
  "websocket_connection_failed": "❌ WebSocket 连接失败：",
  "not_connected": "❌ 未连接到 AWS IoT Core",
  "subscribing_topic_websocket": "📥 订阅主题（WebSocket）",
  "websocket_subscription_established": "WEBSOCKET 订阅已建立",
  "qos_requested": "请求的 QoS",
  "qos_granted": "授予的 QoS",
  "packet_id": "数据包 ID",
  "wildcard_support": "通配符支持：AWS IoT 支持 +（单级）和 #（多级）",
  "websocket_subscription_failed": "❌ WebSocket 订阅失败：",
  "detailed_error_info": "🔍 详细错误信息：",
  "error_type": "错误类型",
  "error_message": "错误消息",
  "troubleshooting_timeout": "💡 故障排除：WebSocket 订阅超时",
  "timeout_causes": [
    "• WebSocket 连接可能不稳定",
    "• 网络连接问题",
    "• AWS IoT 端点可能无法访问"
  ],
  "troubleshooting_auth": "💡 故障排除：授权失败",
  "auth_causes": [
    "• AWS 凭证可能无效或已过期",
    "• IAM 策略可能不允许 'iot:Subscribe' 操作",
    "• 检查 IAM 用户/角色权限"
  ],
  "troubleshooting_invalid_topic": "💡 故障排除：无效的主题格式",
  "invalid_topic_causes": [
    "• 主题不能以 '/' 或 '$' 开头（除非是 AWS 保留的）",
    "• 使用字母数字字符、连字符和正斜杠",
    "• 主题最大长度为 256 个字符"
  ],
  "troubleshooting_connection": "💡 故障排除：连接问题",
  "connection_causes": [
    "• WebSocket 连接可能已丢失",
    "• AWS 凭证可能无效",
    "• 端点 URL 可能不正确"
  ],
  "troubleshooting_unknown": "💡 故障排除：未知订阅失败",
  "unknown_causes": [
    "• 运行 'debug {}' 命令进行详细诊断",
    "• 如果启用，请检查 CloudWatch 中的 AWS IoT 日志"
  ],
  "publishing_message_websocket": "📤 发布消息（WebSocket）",
  "published_websocket": "✅ [{}] 通过 WebSocket 发布",
  "delivery_ack_required": "🔄 传递：需要确认（QoS {}）",
  "delivery_fire_forget": "🚀 传递：发送即忘（QoS 0）",
  "websocket_publish_failed": "❌ WebSocket 发布失败：",
  "troubleshooting_publish_timeout": "💡 故障排除：WebSocket 发布超时",
  "troubleshooting_payload_large": "💡 故障排除：负载大小限制超出",
  "payload_limit_info": [
    "• AWS IoT 消息大小限制为 128 KB",
    "• 当前负载大小：{} 字节"
  ],
  "interactive_messaging": "WebSocket 上的交互式 MQTT 消息传递",
  "mqtt_topic_guidelines": "💡 MQTT 主题指南：",
  "topic_guidelines": [
    "• 使用正斜杠表示层次结构：device/sensor/temperature",
    "• 避免前导斜杠：❌ /device/data ✅ device/data",
    "• 保持主题描述性和有组织",
    "• AWS IoT 保留主题以 $aws/ 开头"
  ],
  "enter_subscribe_topic": "📥 输入要订阅的主题（或 'skip'）：",
  "qos_level_prompt": "QoS 级别（0=最多一次，1=至少一次）[0]：",
  "invalid_qos": "❌ 请输入 0 或 1",
  "subscription_failed_retry": "❌ 订阅失败，请重试",
  "run_diagnostics": "您想运行连接诊断吗？(y/N)：",
  "topic_cannot_be_empty": "❌ 主题不能为空",
  "interactive_websocket_mode": "🎮 交互式 WebSocket MQTT 消息传递模式",
  "messages_appear_immediately": "💡 在订阅的主题上收到消息时会立即显示！",
  "commands": "命令：",
  "command_list": [
    "• 'sub <主题>' - 订阅主题（QoS 0）",
    "• 'sub1 <主题>' - 订阅主题（QoS 1）",
    "• 'unsub <主题>' - 取消订阅主题",
    "• 'pub <主题> <消息>' - 发布消息（QoS 0）",
    "• 'pub1 <主题> <消息>' - 使用 QoS 1 发布",
    "• 'json <主题> <键=值> [键=值...]' - 发布 JSON",
    "• 'props <主题> <消息> [属性=值...]' - 使用 MQTT5 属性发布",
    "• 'test' - 向订阅的主题发送测试消息",
    "• 'status' - 显示连接和订阅状态",
    "• 'messages' - 显示消息历史",
    "• 'debug [主题]' - 显示连接诊断和故障排除",
    "• 'clear' - 清屏",
    "• 'help' - 显示此帮助",
    "• 'quit' - 退出"
  ],
  "mqtt_ws_prompt": "📡 MQTT-WS> ",
  "invalid_command": "❌ 无效命令。输入 'help' 查看可用命令。",
  "goodbye": "👋 再见！",
  "connection_diagnostics": "🔍 连接诊断",
  "connection_status_label": "连接状态",
  "connected": "已连接",
  "disconnected": "已断开",
  "subscriptions_count": "活动订阅：{}",
  "no_subscriptions": "无活动订阅",
  "subscription_details": "📋 订阅详情：",
  "granted_qos": "授予的 QoS",
  "subscribed_at": "订阅时间",
  "message_history": "📊 消息历史",
  "received_messages": "接收的消息：{}",
  "sent_messages": "发送的消息：{}",
  "no_messages": "还没有消息",
  "recent_received": "📥 最近接收的消息：",
  "recent_sent": "📤 最近发送的消息：",
  "direction": "方向",
  "size": "大小",
  "clear_screen": "🧹 屏幕已清除",
  "test_message_sent": "🧪 测试消息已发送到 {} 个订阅主题",
  "no_subscribed_topics": "❌ 没有订阅的主题用于测试消息",
  "unsubscribing_from": "📤 正在取消订阅：{}",
  "unsubscribed_success": "✅ 已取消订阅：{}",
  "unsubscribe_failed": "❌ 取消订阅失败：{}",
  "not_subscribed_to": "❌ 未订阅：{}",
  "json_publish_format": "📋 JSON 发布格式：json <主题> 键1=值1 键2=值2 ...",
  "json_publish_example": "示例：json sensors/temp temperature=25.5 humidity=60 location=room1",
  "invalid_json_format": "❌ 无效的 JSON 格式。使用：键=值对",
  "props_publish_format": "🔧 MQTT5 属性格式：props <主题> <消息> [属性=值...]",
  "props_publish_example": "示例：props alerts/fire '检测到火灾！' content-type=text/plain expiry=300",
  "available_properties": "可用属性：content-type, correlation-data, expiry, response-topic",
  "invalid_props_format": "❌ 无效的属性格式。使用：属性=值对",
  "unknown_mqtt5_property": "⚠️  未知的 MQTT5 属性：{}",
  "bytes": "字节",
  "client_id_prompt": "输入自定义客户端 ID（或按 Enter 自动生成）：",
  "client_id_auto_generated": "自动生成的客户端 ID",
  "client_id_custom": "自定义客户端 ID",
  "client_id_invalid": "❌ 无效的客户端 ID。必须是 1-128 个字符，仅限字母数字、连字符、下划线。",
  "client_id_guidelines": "💡 客户端 ID 指南：",
  "client_id_rules": [
    "• 每个连接必须唯一",
    "• 允许 1-128 个字符",
    "• 使用字母数字、连字符（-）和下划线（_）",
    "• 避免空格和特殊字符",
    "• 示例：my-device-001, sensor_temp_01"
  ],
  "debug_full_error": "🔍 调试：完整错误响应：",
  "debug_full_traceback": "🔍 调试：完整回溯：",
  "debug_websocket_setup": "🔍 调试：WebSocket 连接设置",
  "debug_connection_result": "🔍 调试：连接结果：",
  "debug_testing_stability": "🔍 调试：测试 WebSocket 连接稳定性...",
  "debug_connection_stable": "✅ WebSocket 连接似乎稳定且准备好进行操作",
  "debug_connection_unstable": "⚠️  连接已建立但可能不稳定：",
  "debug_mqtt_websocket_subscribe": "🔍 调试：MQTT WebSocket 订阅操作",
  "debug_connection_status": "连接状态",
  "debug_connection_object": "连接对象",
  "debug_topic_pattern": "主题模式",
  "debug_requested_qos": "请求的 QoS",
  "debug_converted_qos": "🔍 调试：转换的 QoS：",
  "debug_callback_function": "🔍 调试：回调函数：",
  "debug_subscribe_sent": "🔍 调试：订阅请求已发送，等待响应...",
  "debug_subscribe_result": "🔍 调试：收到订阅结果：",
  "debug_result": "结果",
  "debug_result_type": "结果类型",
  "debug_websocket_publish": "🔍 调试：WebSocket 发布参数：",
  "debug_payload_length": "负载长度",
  "mqtt_version_selection": "🔧 MQTT 版本选择：",
  "mqtt311_description": "标准，广泛支持",
  "mqtt5_description": "增强功能，属性支持",
  "select_mqtt_version": "选择 MQTT 版本 (1-2)： ",
  "selected_mqtt311": "✅ 已选择 MQTT 3.1.1",
  "selected_mqtt5": "✅ 已选择 MQTT 5.0",
  "invalid_mqtt_version": "❌ 无效选择。请选择 1 或 2。",
  "mqtt_version_label": "MQTT 版本",
  "falling_back_mqtt311": "🔄 回退到 MQTT 3.1.1",
  "operation_cancelled": "🛑 操作已取消",
  "protocol_label": "协议"
}