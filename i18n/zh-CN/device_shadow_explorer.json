{
    "title": "🌟 AWS IoT 设备影子探索器",
    "separator": "============================================================",
    "aws_context_info": "🌍 AWS 上下文信息：",
    "account_id": "账户 ID",
    "region": "区域",
    "aws_context_error": "⚠️ 无法检索 AWS 上下文：",
    "aws_credentials_reminder": "   请确保已配置 AWS 凭证",
    "description_intro": "此脚本教您 AWS IoT 设备影子概念：",
    "shadow_concepts": [
        "• 用于状态同步的设备影子服务",
        "• 影子文档结构（期望状态 vs 报告状态）",
        "• 影子操作的 MQTT 主题",
        "• 状态差异的增量消息",
        "• 实时影子更新和通知",
        "• 每个操作的完整 API 详细信息"
    ],
    "debug_enabled": "🔍 调试模式已启用",
    "debug_features": [
        "• 增强的 MQTT 消息日志记录",
        "• 完整的影子文档分析",
        "• 扩展的教育信息"
    ],
    "tip": "💡 提示：使用 --debug 或 -d 标志进行增强的影子日志记录",
    "press_enter": "按 Enter 键继续...",
    "goodbye": "👋 再见！",
    "main_menu": "📋 设备影子操作：",
    "menu_options": [
        "1. 连接到设备并订阅影子主题",
        "2. 获取当前影子文档",
        "3. 更新影子报告状态（设备 → 云端）",
        "4. 更新影子期望状态（云端 → 设备）",
        "5. 模拟设备状态变化",
        "6. 查看影子消息历史",
        "7. 断开连接并退出"
    ],
    "select_option": "选择选项 (1-7)：",
    "invalid_choice": "❌ 无效选择。请选择 1-7。",
    "learning_moments": {
        "shadow_foundation": {
            "title": "📚 学习要点：设备影子基础",
            "content": "AWS IoT 设备影子是一个 JSON 文档，用于存储和检索设备的当前状态信息。影子充当设备和应用程序之间的中介，即使在设备离线时也能实现可靠的通信。理解影子概念对于构建强大的 IoT 应用程序至关重要。",
            "next": "我们将探索影子操作和 MQTT 通信"
        },
        "shadow_connection": {
            "title": "📚 学习要点：影子 MQTT 连接",
            "content": "设备影子使用 MQTT 主题进行通信。每个影子操作（get、update、delete）都有相应的 accepted/rejected 响应主题。当期望状态与报告状态不同时，增量主题会发出通知。这种发布/订阅模型实现了设备和应用程序之间的实时双向通信。",
            "next": "我们将建立 MQTT 连接并订阅影子主题"
        },
        "shadow_document": {
            "title": "📚 学习要点：影子文档结构",
            "content": "影子文档包含'desired'（期望）和'reported'（报告）状态。期望状态表示设备应该处于的状态，通常由应用程序设置。报告状态表示设备的当前状态。当这两者不同时，AWS IoT 会生成增量消息来通知设备所需的更改。",
            "next": "我们将检索并分析当前的影子文档"
        },
        "reported_state": {
            "title": "📚 学习要点：报告状态更新",
            "content": "设备更新其报告状态以告知云端其当前状态。这通常在设备更改其物理状态（温度、状态等）后进行。报告状态更新有助于保持影子与实际设备状态同步。",
            "next": "我们将从设备更新影子的报告状态"
        },
        "desired_state": {
            "title": "📚 学习要点：期望状态更新",
            "content": "应用程序设置期望状态以请求设备更改。当期望状态与报告状态不同时，AWS IoT 会向设备发送增量消息。这种机制通过云端实现远程设备控制和配置管理。",
            "next": "我们将从云端更新影子的期望状态"
        },
        "state_simulation": {
            "title": "📚 学习要点：设备状态模拟",
            "content": "模拟设备状态变化有助于理解完整的影子工作流程。我们将修改本地设备状态并观察它如何通过影子服务传播。这展示了影子通信和状态同步的双向性质。",
            "next": "我们将模拟真实的设备状态变化"
        }
    },
    "workflow_titles": {
        "shadow_connection": "🔗 影子连接工作流",
        "shadow_retrieval": "📥 影子文档检索",
        "reported_update": "📡 报告状态更新",
        "desired_update": "🎯 期望状态更新",
        "state_simulation": "🔄 设备状态模拟",
        "message_history": "📜 影子消息历史"
    },
    "step_establishing_connection": "建立影子操作的 MQTT 连接",
    "step_subscribing_topics": "订阅影子主题",
    "step_requesting_shadow": "请求影子文档",
    "step_updating_reported": "更新报告状态",
    "step_updating_desired": "更新期望状态",
    "step_simulating_changes": "模拟设备变化",
    "shadow_connection_params": "🔗 影子连接参数：",
    "client_id": "客户端 ID",
    "thing_name": "物品名称",
    "endpoint": "端点",
    "port": "端口",
    "protocol": "协议",
    "authentication": "身份验证",
    "shadow_type": "影子类型",
    "connecting_to_iot": "🔄 正在连接到 AWS IoT Core...",
    "connection_established": "影子连接已建立",
    "connection_status": "成功连接到 AWS IoT Core",
    "clean_session": "清洁会话",
    "keep_alive": "保持活动",
    "tls_version": "TLS 版本",
    "certificate_auth": "证书身份验证",
    "shadow_connection_failed": "❌ 影子连接失败：",
    "not_connected": "❌ 未连接到 AWS IoT Core",
    "shadow_topics_for_thing": "🌟 物品的影子主题：",
    "classic_shadow_topics": "📋 经典影子主题：",
    "subscription_successful": "✅ 成功订阅所有 {} 个影子主题",
    "subscription_partial": "⚠️  只有 {}/{} 个订阅成功",
    "shadow_topic_explanations": "📖 影子主题说明：",
    "topic_get_accepted": "• get/accepted - 影子文档检索成功",
    "topic_get_rejected": "• get/rejected - 影子文档检索失败",
    "topic_update_accepted": "• update/accepted - 影子更新成功",
    "topic_update_rejected": "• update/rejected - 影子更新失败",
    "topic_update_delta": "• update/delta - 期望 ≠ 报告（需要操作）",
    "requesting_shadow_document": "📥 请求影子文档",
    "topic": "主题",
    "thing": "物品",
    "shadow_type_classic": "经典",
    "shadow_get_request_sent": "✅ 影子 GET 请求已发送",
    "qos": "QoS",
    "packet_id": "数据包 ID",
    "waiting_for_response": "⏳ 等待 get/accepted 或 get/rejected 的响应...",
    "failed_request_shadow": "❌ 请求影子文档失败：",
    "shadow_message_received": "🌟 收到影子消息",
    "direction": "方向",
    "received": "已接收",
    "payload_size": "负载大小",
    "timestamp": "时间戳",
    "shadow_data": "影子数据",
    "error_processing_message": "❌ 处理影子消息时出错：",
    "shadow_get_accepted": "✅ 影子 GET 已接受",
    "shadow_document_retrieved": "📋 已检索影子文档：",
    "version": "版本",
    "desired_state": "期望状态",
    "reported_state": "报告状态",
    "none": "无",
    "shadow_get_rejected": "❌ 影子 GET 被拒绝",
    "error_code": "错误代码",
    "message": "消息",
    "shadow_doesnt_exist": "影子尚不存在 - 将在下次更新时创建",
    "checking_shadow_exists": "检查 {} 的影子是否存在...",
    "shadow_creation_normal": "这对于新设备是正常的 - 我们将通过报告初始状态来创建影子",
    "creating_initial_shadow": "影子尚不存在。正在创建初始影子...",
    "initial_shadow_created": "初始影子创建成功！",
    "retrieving_new_shadow": "检索新创建的影子...",
    "shadow_already_exists": "影子已存在",
    "shadow_update_accepted": "✅ 影子更新已接受",
    "new_version": "新版本",
    "updated_desired": "已更新期望",
    "updated_reported": "已更新报告",
    "shadow_update_rejected": "❌ 影子更新被拒绝",
    "shadow_delta_received": "🔄 收到影子增量",
    "description": "描述",
    "desired_differs_reported": "期望状态与报告状态不同",
    "changes_needed": "需要的更改",
    "state_comparison": "🔍 状态比较：",
    "local_state": "本地状态",
    "delta": "增量",
    "desired": "期望",
    "differences_found": "⚠️  发现差异：",
    "apply_changes_prompt": "将这些更改应用到本地设备？(y/N)：",
    "local_state_updated": "✅ 本地状态更新成功",
    "failed_update_local": "❌ 更新本地状态失败",
    "changes_not_applied": "⏭️  更改未应用到本地设备",
    "local_matches_desired": "✅ 本地状态与期望状态匹配 - 无需更改",
    "automatically_reporting": "📡 自动向影子报告更新状态...",
    "local_state_saved": "💾 本地状态已保存到：",
    "created_default_state": "📄 已创建默认本地状态文件：",
    "default_state": "📊 默认状态：",
    "using_existing_state": "📄 使用现有本地状态文件：",
    "current_local_state": "📊 当前本地状态：",
    "local_state_not_found": "❌ 未找到本地状态文件：",
    "invalid_json_state": "❌ 状态文件中的 JSON 无效：",
    "permission_denied_state": "❌ 访问状态文件权限被拒绝：",
    "unexpected_error_loading": "❌ 加载本地状态时出现意外错误：",
    "permission_denied_writing": "❌ 写入状态文件权限被拒绝：",
    "filesystem_error_saving": "❌ 保存状态时文件系统错误：",
    "invalid_state_data": "❌ 无效的状态数据类型：",
    "unexpected_error_saving": "❌ 保存本地状态时出现意外错误：",
    "connection_interrupted": "连接中断",
    "error": "错误",
    "auto_reconnect": "自动重连",
    "sdk_will_reconnect": "AWS IoT SDK 将尝试自动重新连接",
    "connection_resumed": "连接已恢复",
    "return_code": "返回代码",
    "session_present": "会话存在",
    "status": "状态",
    "connection_restored": "连接成功恢复",
    "iot_endpoint_discovery": "🌐 AWS IoT 端点发现",
    "endpoint_type": "端点类型",
    "endpoint_type_ats": "iot:Data-ATS（推荐）",
    "endpoint_url": "端点 URL",
    "port_mqtt_tls": "端口：8883（MQTT over TLS）",
    "protocol_mqtt": "协议：MQTT 3.1.1 over TLS",
    "error_getting_endpoint": "❌ 获取 IoT 端点时出错：",
    "available_devices": "📱 可用设备（找到 {} 个）：",
    "type": "类型",
    "selected_device": "✅ 已选择设备：",
    "invalid_selection": "❌ 无效选择。请输入 1-{}",
    "enter_valid_number": "❌ 请输入有效数字",
    "operation_cancelled": "🛑 操作已取消",
    "no_things_found": "❌ 未找到物品。请先运行 setup_sample_data.py",
    "error_selecting_device": "❌ 选择设备时出错：",
    "no_certificates_found": "❌ 未找到设备 '{}' 的证书",
    "run_certificate_manager": "💡 运行 certificate_manager.py 创建并附加证书",
    "using_certificate": "✅ 使用证书：",
    "multiple_certificates_found": "🔐 找到多个证书：",
    "select_certificate": "选择证书 (1-{})：",
    "invalid_selection_cert": "❌ 无效选择",
    "certificate_files_found": "✅ 找到证书文件：",
    "certificate": "证书",
    "private_key": "私钥",
    "cert_dir_not_found": "❌ 未找到证书目录：",
    "run_cert_manager_files": "💡 运行 certificate_manager.py 创建证书文件",
    "cert_files_not_found": "❌ 在 {} 中未找到证书文件",
    "looking_for_files": "查找：{}.crt 和 {}.key",
    "invalid_thing_name": "⚠️ 无效的物品名称：",
    "unsafe_path_detected": "⚠️ 检测到不安全路径：",
    "updating_shadow_reported": "📡 更新影子报告状态",
    "reported_state_update": "📊 报告状态更新：",
    "current_local_state_label": "当前本地状态",
    "shadow_update_payload": "影子更新负载",
    "shadow_update_sent": "✅ 影子 UPDATE（报告）已发送",
    "failed_update_reported": "❌ 更新报告状态失败：",
    "updating_shadow_desired": "🎯 更新影子期望状态",
    "desired_state_update": "📊 期望状态更新：",
    "enter_property_name": "输入属性名称：",
    "property_name_required": "❌ 属性名称是必需的",
    "enter_property_value": "输入属性值：",
    "property_value_required": "❌ 属性值是必需的",
    "desired_state_to_set": "要设置的期望状态",
    "property": "属性",
    "value": "值",
    "shadow_update_desired_sent": "✅ 影子 UPDATE（期望）已发送",
    "failed_update_desired": "❌ 更新期望状态失败：",
    "simulating_device_changes": "🔄 模拟设备状态变化",
    "simulation_options": "📋 模拟选项：",
    "temperature_change": "1. 温度变化（±5°C）",
    "humidity_change": "2. 湿度变化（±10%）",
    "status_toggle": "3. 状态切换（在线/离线）",
    "firmware_update": "4. 固件版本更新",
    "custom_property": "5. 自定义属性变化",
    "select_simulation": "选择模拟 (1-5)：",
    "invalid_simulation": "❌ 无效选择。请选择 1-5。",
    "temperature_changed": "🌡️  温度已变化：{} → {}°C",
    "humidity_changed": "💧 湿度已变化：{} → {}%",
    "status_changed": "🔄 状态已变化：{} → {}",
    "firmware_updated": "🔧 固件已更新：{} → {}",
    "custom_property_changed": "🔧 自定义属性 '{}' 已变化：{} → {}",
    "state_change_summary": "📊 状态变化摘要：",
    "previous_value": "先前值",
    "new_value": "新值",
    "local_state_updated_sim": "💾 本地状态已更新并保存",
    "reporting_to_shadow": "📡 向影子报告变化...",
    "simulation_complete": "✅ 模拟完成",
    "viewing_message_history": "📜 查看影子消息历史",
    "message_history": "📊 影子消息历史（{} 条消息）：",
    "no_messages_received": "📭 尚未收到影子消息",
    "try_other_operations": "💡 请先尝试其他操作以生成影子消息",
    "message_details": "消息详细信息：",
    "clear_history_prompt": "清除消息历史？(y/N)：",
    "history_cleared": "🗑️  消息历史已清除",
    "history_not_cleared": "📜 消息历史已保留",
    "disconnecting_from_iot": "🔌 正在断开与 AWS IoT Core 的连接...",
    "disconnection_complete": "✅ 断开连接完成",
    "session_summary": "📊 会话摘要：",
    "total_messages": "收到的消息总数",
    "connection_duration": "连接持续时间",
    "shadow_operations": "执行的影子操作",
    "thank_you_message": "感谢您探索 AWS IoT 设备影子！",
    "next_steps_suggestions": "🔍 下一步：",
    "explore_iot_rules": "• 探索 iot_rules_explorer.py 进行消息处理",
    "try_mqtt_client": "• 尝试 mqtt_client_explorer.py 进行直接 MQTT 通信",
    "check_registry": "• 使用 iot_registry_explorer.py 查看设备详细信息",
    "edit_local_state_title": "📝 本地状态编辑器",
    "current_state": "当前状态：",
    "options": "选项：",
    "edit_individual_values": "1. 编辑单个值",
    "replace_entire_state": "2. 用 JSON 替换整个状态",
    "cancel": "3. 取消",
    "select_option_1_3": "选择选项 (1-3)：",
    "current_values": "当前值：",
    "add_new_key": "添加新键",
    "done_editing": "完成编辑",
    "select_item_to_edit": "选择要编辑的项目 (1-{})：",
    "editing_key": "编辑 '{}'（当前：{}）",
    "new_value_prompt": "新值（或按 Enter 保持当前值）：",
    "updated_key": "✅ 已更新 {} = {}",
    "new_key_name": "新键名称：",
    "value_for_key": "'{}' 的值：",
    "added_new_key": "✅ 已添加新键：{} = {}",
    "enter_json_prompt": "输入您的 JSON 状态（完成后按两次 Enter）：",
    "invalid_json": "❌ 无效的 JSON：{}",
    "state_updated_from_json": "✅ 状态已从 JSON 更新",
    "report_updated_state": "向影子报告更新状态？(y/N)：",
    "shadow_command_prompt": "🌟 影子> ",
    "available_commands": "📖 可用命令：",
    "get_command": "   get                       - 请求影子文档",
    "local_command": "   local                     - 显示本地设备状态",
    "edit_command": "   edit                      - 编辑本地设备状态",
    "report_command": "   report                    - 向影子报告本地状态",
    "desire_command": "   desire key=val [key=val]  - 设置期望状态",
    "status_command": "   status                    - 连接状态",
    "messages_command": "   messages                  - 影子消息历史",
    "debug_command": "   debug                     - 连接诊断",
    "quit_command": "   quit                      - 退出",
    "example_desire": "💡 示例：desire temperature=25.0 status=active",
    "current_local_device_state": "📱 当前本地设备状态：",
    "usage_desire": "❌ 用法：desire key=value [key=value...]",
    "example_desire_usage": "💡 示例：desire temperature=25.0 status=active",
    "setting_desired_state": "🎯 设置期望状态：{}",
    "no_valid_pairs": "❌ 未找到有效的 key=value 对",
    "shadow_connection_status": "📊 影子连接状态：",
    "connected": "已连接",
    "yes": "✅ 是",
    "no": "❌ 否",
    "shadow_message_history": "📨 影子消息历史：",
    "unknown_command": "❌ 未知命令：{}。输入 'help' 查看可用命令。",
    "client_id_prompt": "输入自定义客户端 ID（或按 Enter 自动生成）：",
    "client_id_auto_generated": "自动生成的客户端 ID",
    "client_id_custom": "自定义客户端 ID",
    "client_id_invalid": "❌ 无效的客户端 ID。必须是 1-128 个字符，仅限字母数字、连字符和下划线。",
    "client_id_guidelines": "💡 客户端 ID 指南：",
    "client_id_rules": [
        "• 每个连接必须唯一",
        "• 允许 1-128 个字符",
        "• 使用字母数字、连字符 (-) 和下划线 (_)",
        "• 避免空格和特殊字符",
        "• 示例：my-device-001, sensor_temp_01"
    ],
    "debug_raw_topic": "🔍 DEBUG: 原始主题:",
    "debug_qos_duplicate": "🔍 DEBUG: QoS: {}, 重复: {}, 保留: {}",
    "debug_payload_size": "🔍 DEBUG: 负载大小: {} 字节",
    "debug_message_count": "🔍 DEBUG: 消息计数: {}",
    "debug_unrecognized_topic": "🔍 DEBUG: 无法识别的影子主题模式",
    "debug_comparing_desired": "🔍 DEBUG: 正在比较期望状态与本地状态",
    "debug_desired_keys": "🔍 DEBUG: 期望键: {}",
    "debug_no_desired_state": "🔍 DEBUG: 影子文档中没有期望状态",
    "debug_normal_for_new": "🔍 DEBUG: 这对新设备是正常的 - 影子在首次更新时创建",
    "debug_error_code_indicates": "🔍 DEBUG: 错误代码 {} 表示: {}",
    "debug_processing_delta": "🔍 DEBUG: 正在处理包含 {} 个更改属性的增量",
    "debug_delta_keys": "🔍 DEBUG: 增量键: {}",
    "debug_loaded_local_state": "🔍 DEBUG: 已加载包含 {} 个属性的本地状态",
    "debug_comparing_properties": "🔍 DEBUG: 正在比较 {} 个期望属性",
    "debug_differences_found": "🔍 DEBUG: 在 {} 个期望属性中发现 {} 个差异",
    "debug_type_change": "🔍 DEBUG: 类型更改: {} → {}",
    "debug_updated_properties": "🔍 DEBUG: 在本地状态中更新了 {} 个属性",
    "debug_new_state_size": "🔍 DEBUG: 新本地状态大小: {} 个属性",
    "debug_all_match": "🔍 DEBUG: 所有 {} 个期望属性都与本地状态匹配",
    "debug_setting_up_state": "🔍 DEBUG: 配置本地状态文件: {}",
    "debug_cert_directory": "🔍 DEBUG: 证书目录: {}",
    "debug_file_exists": "🔍 DEBUG: 文件存在: {}",
    "debug_created_new_state": "🔍 DEBUG: 创建了包含 {} 个属性的新状态文件",
    "debug_loaded_existing_state": "🔍 DEBUG: 加载了包含 {} 个属性的现有状态文件",
    "debug_file_size": "🔍 DEBUG: 文件大小: {} 字节",
    "debug_calling_describe_endpoint": "🔍 DEBUG: 调用 describe_endpoint API",
    "debug_input_parameters": "📥 输入参数: {'endpointType': 'iot:Data-ATS'}",
    "debug_api_response": "📤 API 响应: {}",
    "debug_full_traceback": "🔍 DEBUG: 完整跟踪:",
    "debug_calling_list_things": "🔍 DEBUG: 调用 list_things API",
    "debug_input_params_none": "📥 输入参数: 无",
    "debug_found_things": "📤 API 响应: 找到 {} 个物品",
    "debug_thing_names": "📊 物品名称: {}",
    "debug_calling_list_principals": "🔍 DEBUG: 调用 list_thing_principals API",
    "debug_input_thing_name": "📥 输入参数: {{'thingName': '{}'}}",
    "debug_found_principals": "📤 API 响应: 找到 {} 个主体，{} 个证书",
    "debug_cert_arns": "📊 证书 ARN: {}",
    "debug_shadow_connection_setup": "🔍 DEBUG: 影子 MQTT 连接设置",
    "debug_thing_name": "   物品名称: {}",
    "debug_cert_file": "   证书文件: {}",
    "debug_private_key_file": "   私钥文件: {}",
    "debug_endpoint": "   端点: {}",
    "debug_connection_result": "🔍 DEBUG: 连接结果: {}",
    "debug_subscribing_topic": "🔍 DEBUG: 正在订阅影子主题: {}",
    "debug_subscription_successful": "🔍 DEBUG: 订阅成功，数据包 ID: {}",
    "debug_publishing_shadow_get": "🔍 DEBUG: 正在发布影子 get 请求",
    "debug_topic": "   主题: {}",
    "debug_payload_empty": "   负载: 空（影子 get 请求没有负载）",
    "debug_publishing_shadow_update": "🔍 DEBUG: 正在发布影子 update 请求",
    "debug_payload_json": "   负载: {}",
    "debug_update_type": "   更新类型: {}",
    "debug_simulation_type": "🔍 DEBUG: 模拟类型: {}",
    "debug_property_change": "🔍 DEBUG: 属性 '{}' 从 {} 更改为 {}",
    "debug_state_before": "🔍 DEBUG: 更改前状态: {}",
    "debug_state_after": "🔍 DEBUG: 更改后状态: {}"
}