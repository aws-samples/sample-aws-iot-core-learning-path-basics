{
  "title": "🔐 AWS IoT 证书和策略管理器",
  "separator": "==================================================",
  "aws_config": "📍 AWS 配置:",
  "account_id": "账户 ID",
  "region": "区域",
  "aws_context_error": "⚠️ 无法检索 AWS 上下文:",
  "aws_credentials_reminder": "   确保已配置 AWS 凭证",
  "description_intro": "此脚本教授 AWS IoT 安全概念:",
  "security_concepts": [
    "• 用于设备身份验证的 X.509 证书",
    "• 证书到 Things 的连接",
    "• 用于授权的 IoT 策略",
    "• 策略连接和分离",
    "• 外部证书注册",
    "• 每个操作的完整 API 详细信息"
  ],
  "debug_enabled": "🔍 调试模式已启用",
  "debug_features": [
    "• 增强的 API 请求/响应日志记录",
    "• 完整的错误详细信息和回溯",
    "• 扩展的教育信息"
  ],
  "tip": "💡 提示: 使用 --debug 或 -d 标志进行增强的 API 日志记录",
  "client_initialized": "✅ AWS IoT 客户端已初始化",
  "client_error": "❌ 初始化 AWS IoT 客户端时出错:",
  "no_region_error": "❌ 未配置 AWS 区域",
  "region_setup_instructions": [
    "请使用以下方法之一配置您的 AWS 区域:",
    "1. 设置环境变量: export AWS_DEFAULT_REGION=us-east-1",
    "2. 配置 AWS CLI: aws configure",
    "3. 在 AWS 凭证文件中设置区域"
  ],
  "invalid_credentials": "❌ 无效的 AWS 凭证",
  "credentials_check_failed": "❌ 缺少必需的环境变量:",
  "credentials_instructions": [
    "请导出您的 AWS 凭证:",
    "export AWS_ACCESS_KEY_ID=<your-access-key>",
    "export AWS_SECRET_ACCESS_KEY=<your-secret-key>",
    "export AWS_SESSION_TOKEN=<your-session-token>  # 临时凭证可选"
  ],
  "press_enter": "按 Enter 继续...",
  "goodbye": "👋 再见！",
  "main_menu": "📋 主菜单:",
  "menu_options": [
    "1. 创建 AWS IoT 证书并连接到 Thing（+ 可选策略）",
    "2. 注册外部证书并连接到 Thing（+ 可选策略）",
    "3. 将策略连接到现有证书",
    "4. 从证书分离策略",
    "5. 启用/禁用证书",
    "6. 退出"
  ],
  "select_option": "选择选项 (1-6): ",
  "invalid_choice": "❌ 无效选择。请选择 1-6。",
  "learning_moments": {
    "security_foundation": {
      "title": "📚 学习要点: IoT 安全基础",
      "content": "AWS IoT 安全建立在用于设备身份验证的 X.509 证书和用于授权的 IoT 策略之上。证书唯一标识设备，而策略定义设备可以执行的操作。理解这种安全模型对于构建安全的 IoT 解决方案至关重要。",
      "next": "我们将探索证书和策略管理操作"
    },
    "certificate_creation": {
      "title": "📚 学习要点: 证书创建和 Thing 连接",
      "content": "创建 AWS IoT 证书为您的设备建立唯一的数字身份。证书包含 AWS IoT 用于验证设备的公钥，而私钥安全地保存在设备上。将证书连接到 Thing 会在设备身份和其在 AWS IoT 中的逻辑表示之间创建绑定。",
      "next": "我们将创建证书并将其连接到 Thing"
    },
    "external_registration": {
      "title": "📚 学习要点: 外部证书注册",
      "content": "有时您需要使用来自自己的证书颁发机构 (CA) 或现有 PKI 基础设施的证书。AWS IoT 允许您注册外部证书，在保持安全性的同时为证书管理提供灵活性。这对于具有既定证书策略的组织很有用。",
      "next": "我们将向 AWS IoT 注册外部证书"
    },
    "policy_attachment": {
      "title": "📚 学习要点: 用于授权的策略连接",
      "content": "虽然证书处理身份验证（您是谁），但 IoT 策略处理授权（您可以做什么）。策略定义设备可以发布到哪些 MQTT 主题、订阅哪些主题以及可以执行哪些 AWS IoT 操作。将策略连接到证书会向设备授予特定权限。",
      "next": "我们将向现有证书连接策略"
    },
    "policy_detachment": {
      "title": "📚 学习要点: 用于权限管理的策略分离",
      "content": "有时您需要从设备中删除特定权限而不删除整个证书。策略分离允许您撤销特定权限，同时保持设备身份完整。这对于更改设备角色、排除权限问题或实施安全策略很有用。",
      "next": "我们将从证书分离策略"
    },
    "certificate_lifecycle": {
      "title": "📚 学习要点: 证书生命周期管理",
      "content": "证书状态控制设备是否可以连接到 AWS IoT。ACTIVE 证书允许连接，而 INACTIVE 证书阻止连接。这提供了即时的安全控制 - 您可以立即禁用受损设备或临时暂停访问，而无需完全删除证书。",
      "next": "我们将管理证书状态（启用/禁用）"
    }
  },
  "workflow_titles": {
    "certificate_creation": "🔐 证书创建工作流",
    "external_registration": "📜 外部证书注册工作流",
    "policy_attachment": "🔗 策略连接工作流",
    "policy_detachment": "🔓 策略分离工作流",
    "certificate_status": "🔄 证书状态管理"
  },
  "aws_context_info": "🌍 AWS 上下文信息:",
  "account_id_label": "账户 ID",
  "region_label": "区域",
  "aws_context_error_msg": "⚠️ 无法检索 AWS 上下文:",
  "aws_credentials_config": "   确保已配置 AWS 凭证",
  "policy_to_be_created": "📄 要创建的策略:",
  "policy_name_label": "名称",
  "policy_document_label": "文档",
  "security_warning": "⚠️  安全警告:",
  "security_warning_details": [
    "   此策略出于演示目的使用广泛权限。",
    "   在生产环境中:",
    "   • 使用特定资源 ARN 而不是 '*'",
    "   • 添加条件语句（IP 限制、基于时间的访问）",
    "   • 使用策略变量如 ${iot:Connection.Thing.ThingName}，尚未在此基础学习会话范围内"
  ],
  "policy_validation_issues": "🔍 策略验证问题:",
  "certificate_details": "📋 证书详细信息:",
  "certificate_id_label": "证书 ID",
  "certificate_arn_label": "证书 ARN",
  "status_active": "状态: 活动",
  "certificate_files_saved": "💾 证书文件已保存到:",
  "certificate_components_created": "🔑 已创建的证书组件:",
  "certificate_components_list": [
    "   • 公钥（用于 AWS IoT）",
    "   • 私钥（在设备上保持安全）",
    "   • 证书 PEM（用于设备身份验证）"
  ],
  "thing_already_has_certificates": "⚠️  Thing '{}' 已经连接了 {} 个证书:",
  "certificate_id_item": "   {}. 证书 ID: {}",
  "remove_existing_certificates": "您想删除现有证书吗？(y/N): ",
  "proceeding_with_multiple": "继续将多个证书连接到同一个 Thing...",
  "attaching_certificate_to_thing": "🔗 将证书连接到 Thing: {}",
  "policy_options": "📝 策略选项:",
  "use_existing_policy": "1. 使用现有策略",
  "create_new_policy": "2. 创建新策略",
  "select_option_1_2": "选择选项 (1-2): ",
  "invalid_selection_generic": "❌ 无效选择",
  "enter_valid_number_generic": "❌ 请输入有效数字",
  "select_1_or_2": "❌ 请选择 1 或 2",
  "no_existing_policies": "📝 未找到现有策略。正在创建新策略...",
  "error_listing_policies": "⚠️  列出策略时出错:",
  "proceeding_create_new": "继续创建新策略...",
  "enter_new_policy_name": "输入新策略名称: ",
  "policy_name_required": "❌ 策略名称是必需的",
  "policy_already_exists": "⚠️  策略 '{}' 已存在",
  "use_different_name": "您想使用不同的名称吗？(y/N): ",
  "policy_templates": "📝 策略模板:",
  "basic_device_policy": "1. 基本设备策略（连接、发布、订阅）",
  "readonly_policy": "2. 只读策略（仅连接、订阅）",
  "custom_policy": "3. 自定义策略（输入您自己的 JSON）",
  "select_template_1_3": "选择模板 (1-3): ",
  "select_1_2_or_3": "❌ 请选择 1、2 或 3",
  "certificate_options": "📋 证书选项:",
  "use_existing_cert_file": "1. 使用现有证书文件",
  "generate_sample_cert": "2. 使用 OpenSSL 生成示例证书",
  "invalid_choice_1_2": "❌ 无效选择。请选择 1-2。",
  "cert_must_be_pem": "证书必须是 PEM 格式（.crt 或 .pem 文件）",
  "what_happened": "🔄 发生了什么:",
  "what_happened_steps": [
    "   1. AWS IoT 验证了您的证书格式",
    "   2. 自签名证书已注册，无需 CA 要求",
    "   3. 证书状态设置为 ACTIVE",
    "   4. AWS 分配了唯一的证书 ID 和 ARN",
    "   5. 证书现在准备好进行 Thing 连接"
  ],
  "key_difference": "💡 关键区别:",
  "cleanup_certificate": "🧹 清理证书 {}...",
  "error_detaching_policies": "❌ 分离策略时出错:",
  "removed_local_file": "🗑️  已删除本地文件:",
  "certificate_cleaned_up": "✅ 证书 {} 清理成功",
  "error_checking_certificates": "❌ 检查现有证书时出错:",
  "skipping_file_cleanup": "⚠️ 跳过文件清理 - 无效的 thing_name:",
  "fetching_things": "ℹ️ 正在获取可用的 Things...",
  "available_things": "📱 可用的 Things（找到 {} 个）:",
  "and_more": "... 还有 {} 个",
  "options_header": "📋 选项:",
  "select_thing_options": [
    "• 输入数字 (1-{}) 选择 Thing",
    "• 输入 'all' 查看所有 Things",
    "• 输入 'manual' 手动输入 Thing 名称"
  ],
  "your_choice": "您的选择: ",
  "all_things": "📱 所有 Things:",
  "press_enter_continue": "按 Enter 继续...",
  "enter_thing_name": "输入 Thing 名称: ",
  "invalid_thing_name": "❌ 无效的 Thing 名称。只允许字母数字字符、连字符和下划线。",
  "thing_found": "✅ 找到 Thing '{}'",
  "thing_not_found": "❌ 未找到 Thing '{}'",
  "thing_name_empty": "❌ Thing 名称不能为空",
  "selected_thing": "✅ 已选择 Thing: {}",
  "invalid_selection": "❌ 无效选择",
  "enter_valid_number": "❌ 请输入有效数字",
  "enter_number_all_manual": "❌ 请输入有效数字、'all' 或 'manual'",
  "no_things_found": "❌ 未找到 Things。请先运行 setup_sample_data.py",
  "error_listing_things": "❌ 列出 Things 时出错:",
  "key_difference_details": [
    "   • 使用了 register_certificate_without_ca API",
    "   • 不需要证书颁发机构 (CA) 注册"
  ],
  "cert_must_be_pem_info": "证书必须是 PEM 格式（.crt 或 .pem 文件）",
  "validating_cert_format": "正在验证证书文件格式...",
  "choose_cert_provision": "选择如何提供您的 X.509 证书:",
  "pem_format_starts_with": "PEM 格式以 '-----BEGIN CERTIFICATE-----' 开头",
  "learning_objectives": "🎓 学习目标:",
  "external_cert_objectives": [
    "• 了解 AWS 生成证书与外部证书的区别",
    "• 学习证书注册过程",
    "• 练习证书验证和连接",
    "• 探索 register_certificate API"
  ],
  "select_option_1_2_prompt": "选择选项 (1-2): ",
  "no_things_found_run_setup": "❌ 未找到 Things。请先运行 setup_sample_data.py",
  "options_header_simple": "📋 选项:",
  "enter_number_select_thing": "• 输入数字 (1-{}) 选择 Thing",
  "type_all_see_things": "• 输入 'all' 查看所有 Things",
  "type_manual_enter_name": "• 输入 'manual' 手动输入 Thing 名称",
  "all_things_header": "📱 所有 Things:",
  "invalid_thing_name_chars": "❌ 无效的 Thing 名称。只允许字母数字字符、连字符和下划线。",
  "thing_name_cannot_be_empty": "❌ Thing 名称不能为空",
  "policy_creation_cancelled": "出于安全原因取消策略创建",
  "enter_policy_json": "输入您的策略 JSON（完成后按两次 Enter）:",
  "policy_to_be_created_header": "📄 要创建的策略:",
  "available_policies": "📋 可用策略:",
  "invalid_selection_simple": "❌ 无效选择",
  "enter_valid_number_simple": "❌ 请输入有效数字",
  "no_policies_found_create": "❌ 未找到策略。首先创建一个...",
  "api_details_header": "🔍 API 详细信息:",
  "operation_label": "操作",
  "http_method_label": "HTTP 方法",
  "certificate_status_management": "🔄 证书状态管理",
  "learning_objectives_header": "🎓 学习目标:",
  "cert_lifecycle_objectives": [
    "• 了解证书生命周期管理",
    "• 学习启用/禁用操作",
    "• 练习证书状态控制",
    "• 探索 update_certificate API"
  ],
  "fetching_all_certificates": "🔍 正在获取所有证书...",
  "failed_to_list_certificates": "❌ 列出证书失败",
  "no_certificates_found": "📋 在您的账户中未找到证书",
  "create_certificates_first": "💡 请先使用选项 1 或 2 创建证书",
  "invalid_selection_cert": "❌ 无效选择",
  "enter_valid_number_cert": "❌ 请输入有效数字",
  "selected_certificate": "📝 已选择证书:",
  "certificate_id_short": "ID",
  "attached_to_thing": "连接到 Thing",
  "none_label": "无",
  "available_action": "🔄 可用操作:",
  "enable_certificate": "启用证书（将状态设置为 ACTIVE）",
  "disable_certificate": "禁用证书（将状态设置为 INACTIVE）",
  "operation_cancelled": "❌ 操作已取消",
  "certificate_action_success": "✅ 证书{}成功！",
  "status_change_summary": "📊 状态更改摘要:",
  "new_status_label": "新状态",
  "what_this_means": "💡 这意味着什么:",
  "active_cert_meanings": [
    "• 证书现在可以用于设备身份验证",
    "• 具有此证书的设备可以连接到 AWS IoT",
    "• 使用此证书的 MQTT 连接将成功"
  ],
  "inactive_cert_meanings": [
    "• 证书现在已禁用身份验证",
    "• 具有此证书的设备无法连接到 AWS IoT",
    "• 使用此证书的 MQTT 连接将失败"
  ],
  "next_steps": "🔍 下一步:",
  "next_steps_list": [
    "• 使用 iot_registry_explorer.py 验证状态更改",
    "• 测试 MQTT 连接以查看效果"
  ],
  "reenable_when_ready": "• 准备好恢复设备连接时重新启用",
  "failed_to_action_cert": "❌ {}证书失败",
  "policy_attachment_workflow": "🔗 策略连接工作流",
  "no_certificates_for_thing": "❌ 未找到 Thing '{}' 的证书",
  "tip_run_option_1": "💡 提示: 首先运行选项 1 创建并连接证书",
  "using_certificate": "✅ 使用证书: {}",
  "multiple_certificates_found": "📋 找到多个证书:",
  "certificate_successfully_attached": "✅ 证书成功连接到 {}",
  "thing_can_use_cert": "Thing 现在可以使用此证书进行身份验证",
  "certificate_generated_successfully": "✅ 证书生成成功",
  "certificate_details_header": "📊 证书详细信息:",
  "cert_type_self_signed": "• 类型: 自签名 X.509",
  "cert_algorithm": "• 算法: RSA 2048 位",
  "cert_validity": "• 有效期: 365 天",
  "cert_usage": "• 用途: 仅设备身份验证",
  "cert_location": "• 位置: {}",
  "proceed_with_policy_warnings": "尽管有安全警告，仍要继续使用此策略吗？(y/N): ",
  "confirm_action": "确认{}证书？(y/N): ",
  "available_things_count": "📱 可用的 Things（找到 {} 个）:",
  "selected_thing_prefix": "✅ 已选择 Thing: {}",
  "thing_found_check": "✅ 找到 Thing '{}'",
  "thing_not_found_check": "❌ 未找到 Thing '{}'",
  "learning_moment_cert_process": "📚 学习要点: 证书创建过程",
  "cert_creation_explanation": "我们现在将使用 AWS IoT 的证书颁发机构创建 X.509 证书。这会生成一个唯一的公钥/私钥对，其中 AWS 保留公钥并为您的设备提供证书和私钥。",
  "next_creating_cert": "🔄 下一步: 使用 AWS IoT 创建证书",
  "found_existing_policies": "📋 找到 {} 个现有策略:",
  "api_response_found_certs": "📤 API 响应: 找到 {} 个证书",
  "found_certificates_count": "📋 找到 {} 个证书:",
  "no_certificates_for_thing_msg": "❌ 未找到 Thing '{}' 的证书",
  "tip_run_option_1_msg": "💡 提示: 首先运行选项 1 创建并连接证书",
  "using_certificate_msg": "✅ 使用证书: {}",
  "multiple_certificates_found_msg": "📋 找到多个证书:",
  "no_policies_found_account": "📋 在您的账户中未找到策略",
  "create_policies_first": "💡 请先使用选项 1、2 或 3 创建策略",
  "found_policies_count": "📋 找到 {} 个策略:",
  "no_certs_with_policy": "📋 未找到连接策略 '{}' 的证书",
  "policy_not_attached": "💡 此策略当前未连接到任何证书",
  "found_certs_with_policy": "📋 找到 {} 个具有此策略的证书:",
  "openssl_not_found": "❌ 未找到 OpenSSL。请安装 OpenSSL:",
  "install_openssl_macos": "   macOS: brew install openssl",
  "install_openssl_ubuntu": "   Ubuntu: sudo apt-get install openssl",
  "file_not_found": "❌ 文件未找到: {}",
  "multiple_certs_warning": "⚠️  找到多个证书。只会使用第一个。",
  "cert_format_validated": "✅ 证书文件格式已验证",
  "cert_file_not_found": "❌ 证书文件未找到",
  "found_private_key": "🔍 找到对应的私钥: {}",
  "private_key_saved": "🔑 私钥已保存: {}",
  "private_key_not_found": "⚠️  在以下位置未找到私钥: {}",
  "enter_key_path": "输入私钥文件路径（或按 Enter 跳过）: ",
  "key_file_not_found": "❌ 密钥文件未找到: {}",
  "private_key_not_saved": "⚠️  私钥未保存 - MQTT 客户端可能无法工作",
  "key_within_working_dir": "⚠️ 密钥文件必须在当前工作目录内",
  "external_cert_registration_moment": "📚 学习要点: 外部证书注册",
  "external_cert_explanation": "我们现在将向 AWS IoT 注册您的外部证书。与 AWS 生成的证书不同，此过程注册您现有的证书，而不是 AWS 创建新密钥。您的私钥保持在您的控制之下，而 AWS 验证并注册公共证书。",
  "next_registering_cert": "🔄 下一步: 向 AWS IoT 注册证书",
  "step_creating_certificate": "创建 X.509 证书",
  "step_attaching_certificate": "将证书连接到 Thing",
  "step_policy_management": "IoT 策略管理",
  "step_attaching_policy": "将策略连接到证书",
  "certificates_for_auth": "X.509 证书用于 AWS IoT 中的设备身份验证",
  "cert_contains_keypair": "每个证书包含一个公钥/私钥对",
  "api_description_create_cert": "使用公钥/私钥对创建新的 X.509 证书",
  "input_params_set_active": "setAsActive: true（立即激活证书）",
  "expected_output_cert": "certificateArn、certificateId、certificatePem、keyPair（公钥/私钥）",
  "learning_moment_cert_attachment": "📚 学习要点: 证书-Thing 连接",
  "cert_attachment_explanation": "现在我们将证书连接到您选择的 Thing。这在证书身份和设备在 AWS IoT 中的逻辑表示之间创建安全绑定。连接后，设备可以使用此证书向 AWS IoT Core 进行身份验证。",
  "next_attaching_cert": "🔄 下一步: 将证书连接到 Thing",
  "press_enter_continue_generic": "按 Enter 继续...",
  "api_path_label": "API 路径",
  "description_label": "描述",
  "input_parameters_label": "输入参数",
  "expected_output_label": "预期输出",
  "creating_cert_keypair": "正在创建证书和密钥对...",
  "cert_keypair_completed": "证书和密钥对创建成功完成",
  "attaching_cert_to_thing": "正在将证书连接到 Thing...",
  "cert_attachment_completed": "证书连接到 Thing 成功完成",
  "iot_policies_define_actions": "IoT 策略定义证书可以执行的操作",
  "create_new_or_existing": "您可以创建新策略或使用现有策略",
  "policy_attachment_explanation": "策略连接向证书授予特定权限",
  "cert_now_has_permissions": "证书现在具有策略中定义的权限",
  "operation_completed_successfully": "{}成功完成",
  "operation_completed": "{}完成",
  "output_label": "输出",
  "api_description_attach_thing": "将证书（主体）连接到 Thing 进行身份验证",
  "empty_response_success": "成功时返回空响应",
  "attaching_cert_to_thing_name": "正在将证书连接到 {}",
  "policies_must_be_attached": "必须将策略连接到证书以授予权限",
  "without_policy_no_operations": "没有策略，证书无法执行任何 IoT 操作",
  "certs_must_be_attached": "必须将证书连接到 Things 进行设备身份验证",
  "creates_secure_relationship": "这在证书和 IoT 设备之间创建安全关系",
  "cert_will_be_attached": "证书将连接到: {}",
  "would_like_create_policy": "您想创建并连接策略吗？(y/N): ",
  "creates_self_signed_cert": "这为学习目的创建自签名证书",
  "production_use_trusted_ca": "在生产中，使用来自受信任证书颁发机构的证书",
  "registering_external_cert": "正在向 AWS IoT 注册外部证书...",
  "registers_without_new_keys": "这注册您的证书而不是 AWS 生成新密钥",
  "private_key_stays_with_you": "您的私钥保留在您这里 - AWS 只获得公共证书",
  "proceed_despite_warnings": "尽管有安全警告，仍要继续使用此策略吗？(y/N): ",
  "do_you_want_to_action_cert": "您想{}此证书吗？(y/N): ",
  "detach_policy_from_cert": "从此证书分离策略 '{}'？(y/N): ",
  "attach_existing_policy": "您想连接现有策略吗？(y/N): ",
  "continue_anyway": "仍要继续吗？(y/N): ",
  "warning_no_crt_pem": "⚠️  警告: 文件没有 .crt 或 .pem 扩展名",
  "certificate_file_label": "证书",
  "private_key_file_label": "私钥",
  "public_key_file_label": "公钥",
  "press_enter_continue_simple": "按 Enter 继续...",
  "invalid_selection_enter_range": "❌ 无效选择。请输入 1-{}",
  "enter_valid_number_all_manual": "❌ 请输入有效数字、'all' 或 'manual'",
  "selected_existing_policy": "✅ 已选择现有策略: {}",
  "using_existing_policy": "✅ 使用现有策略: {}",
  "policy_name_available": "✅ 策略名称 '{}' 可用",
  "error_checking_policy": "❌ 检查策略时出错: {}",
  "select_policy_template": "选择策略模板 (1-3): ",
  "invalid_json_error": "❌ 无效的 JSON: {}",
  "name_label_simple": "名称",
  "document_label_simple": "文档",
  "error_listing_policies_simple": "❌ 列出策略时出错: {}",
  "certificate_id_simple": "证书 ID",
  "error_simple": "❌ 错误: {}",
  "invalid_selection_simple_msg": "❌ 无效选择",
  "enter_valid_number_simple_msg": "❌ 请输入有效数字",
  "current_status_label": "当前状态",
  "arn_label": "ARN",
  "operation_cancelled_simple": "❌ 操作已取消",
  "previous_status_label": "之前状态",
  "new_status_label_simple": "新状态",
  "what_this_means_simple": "💡 这意味着什么:",
  "cert_can_be_used_auth": "• 证书现在可以用于设备身份验证",
  "devices_can_connect": "• 具有此证书的设备可以连接到 AWS IoT",
  "mqtt_connections_succeed": "• 使用此证书的 MQTT 连接将成功",
  "cert_disabled_auth": "• 证书现在已禁用身份验证",
  "devices_cannot_connect": "• 具有此证书的设备无法连接到 AWS IoT",
  "mqtt_connections_fail": "• 使用此证书的 MQTT 连接将失败",
  "next_steps_simple": "🔍 下一步:",
  "use_registry_explorer": "• 使用 iot_registry_explorer.py 验证状态更改",
  "test_mqtt_connection": "• 测试 MQTT 连接以查看效果",
  "reenable_when_ready_simple": "• 准备好恢复设备连接时重新启用",
  "failed_to_action_certificate": "❌ {}证书失败",
  "policy_attachment_workflow_title": "🔗 策略连接工作流",
  "checking_certificates_for_thing": "🔍 正在检查 Thing 的证书: {}",
  "select_certificate_prompt": "选择证书 (1-{}): ",
  "enter_cert_name_default": "\n输入证书名称 [默认: sample-device]: ",
  "enter_cert_path": "\n输入证书文件路径: ",
  "cert_path_required": "❌ 证书路径是必需的",
  "failed_to_list_policies": "❌ 列出策略失败",
  "failed_to_list_policy_targets": "❌ 列出策略目标失败",
  "failed_to_detach_policy": "❌ 分离策略失败",
  "failed_to_create_certificate": "❌ 创建证书失败。正在退出。",
  "failed_to_attach_certificate": "❌ 将证书连接到 Thing 失败。正在退出。",
  "cert_name_invalid_chars": "❌ 证书名称只能包含字母、数字、连字符和下划线",
  "invalid_cert_format_start": "❌ 无效的证书格式。必须是以 '-----BEGIN CERTIFICATE-----' 开头的 PEM 格式",
  "tip_convert_der_to_pem": "💡 提示: 使用以下命令将 DER 转换为 PEM: openssl x509 -inform DER -outform PEM -in cert.der -out cert.pem",
  "invalid_cert_format_end": "❌ 无效的证书格式。必须以 '-----END CERTIFICATE-----' 结尾",
  "permission_denied_cert": "❌ 读取证书文件权限被拒绝",
  "cert_encoding_error": "❌ 证书文件编码错误 - 文件可能是二进制的",
  "cert_file_required": "❌ 需要证书文件。正在退出工作流。",
  "cert_validation_failed": "❌ 证书验证失败。正在退出工作流。",
  "thing_selection_required": "❌ 需要选择 Thing。正在退出工作流。",
  "cert_registration_failed": "❌ 证书注册失败。正在退出工作流。",
  "skipping_file_save_invalid_name": "⚠️ 由于无效的 thing 名称跳过文件保存: {}",
  "cert_registered_files_not_saved": "❌ 证书已注册但由于安全验证未保存本地文件。",
  "cert_attachment_failed": "❌ 证书连接失败。正在退出工作流。",
  "policy_detachment_workflow": "🔓 策略分离工作流",
  "learning_objectives_header_simple": "🎓 学习目标:",
  "understand_policy_detachment": "• 了解策略分离过程",
  "learn_find_devices_by_policy": "• 学习按策略查找设备",
  "practice_cert_policy_mgmt": "• 练习证书-策略关系管理",
  "explore_detach_policy_api": "• 探索 detach_policy API",
  "fetching_all_policies": "🔍 正在获取所有策略...",
  "detachment_summary": "📝 分离摘要:",
  "policy_label_simple": "策略",
  "policy_detached_successfully": "✅ 策略分离成功！",
  "detachment_results": "📊 分离结果:",
  "policy_removed_from_cert": "策略 '{}' 已从证书 {} 中删除",
  "thing_cert_no_longer_has_policy": "Thing '{}' 证书不再具有此策略",
  "what_this_means_detach": "💡 这意味着什么:",
  "cert_no_longer_perform_actions": "• 证书不再能执行 '{}' 中定义的操作",
  "device_may_lose_permissions": "• 设备可能失去特定权限（连接、发布、订阅）",
  "other_policies_still_apply": "• 连接到此证书的其他策略仍然适用",
  "policy_still_exists": "• 策略仍然存在，可以连接到其他证书",
  "next_steps_detach": "🔍 下一步:",
  "use_registry_explorer_verify": "• 使用 iot_registry_explorer.py 验证策略分离",
  "test_device_connectivity": "• 测试设备连接以查看权限更改",
  "attach_different_policy": "• 如需要，使用选项 3 连接不同策略",
  "setup_complete": "设置完成！🎉",
  "summary_created_configured": "📊 已创建/配置内容摘要:",
  "certificate_source_label": "🏷️  证书来源",
  "attached_to_thing_label": "📱 连接到 Thing",
  "policy_attached_label": "📄 已连接策略",
  "what_you_can_explore": "🔍 您现在可以探索的内容:",
  "use_registry_explorer_view": "• 使用 iot_registry_explorer.py 查看证书",
  "check_thing_attached_cert": "• 检查 Thing 以查看其连接的证书",
  "review_policy_permissions": "• 查看策略权限",
  "compare_external_vs_aws": "• 比较外部与 AWS 生成的证书工作流",
  "key_learning_points": "💡 关键学习要点:",
  "certs_provide_device_identity": "• 证书提供设备身份和身份验证",
  "things_represent_iot_devices": "• Things 代表您在 AWS 中的 IoT 设备",
  "policies_define_actions": "• 策略定义证书可以执行的操作",
  "external_certs_integrate_pki": "• 外部证书与现有 PKI 基础设施集成",
  "register_vs_create_api": "• register_certificate API vs create_keys_and_certificate API",
  "all_components_work_together": "• 所有组件协同工作以实现安全的 IoT 通信",
  "generating_cert_files": "🔑 正在生成证书文件:",
  "private_key_label": "私钥",
  "certificate_label": "证书",
  "running_openssl_command": "🔄 正在运行 OpenSSL 命令...",
  "command_label": "📥 命令",
  "certificate_information": "🔍 证书信息:",
  "windows_openssl_download": "   Windows: 从 https://slproweb.com/products/Win32OpenSSL.html 下载",
  "cert_file_within_working_dir": "⚠️ 证书文件必须在当前工作目录内",
  "cert_file_content_preview": "📥 证书文件内容预览:",
  "cert_validation_results": "📊 证书验证结果:",
  "format_pem_check": "   • 格式: PEM ✅",
  "certificate_count_label": "   • 证书数量",
  "file_size_label": "   • 文件大小",
  "cert_registration_results": "📋 证书注册结果:",
  "source_external": "   来源: 外部（用户提供）",
  "registration_method": "   注册方法: register_certificate API",
  "perfect_for_self_signed": "   • 非常适合自签名证书和学习",
  "production_use_ca_signed": "   • 生产系统通常使用 CA 签名证书",
  "saving_cert_files_locally": "💾 正在本地保存证书文件供 MQTT 客户端使用...",
  "key_file_within_working_dir": "⚠️ 密钥文件必须在当前工作目录内",
  "listing_all_certificates": "列出所有证书",
  "no_thing_attached": "（未连接 Thing）",
  "created_label": "已创建",
  "unknown_label": "未知",
  "active_status": "活动",
  "inactive_status": "非活动",
  "api_desc_create_keys_cert": "使用公钥/私钥对创建新的 X.509 证书",
  "api_input_set_active": "setAsActive: true（立即激活证书）",
  "api_output_cert_keypair": "certificateArn、certificateId、certificatePem、keyPair（公钥/私钥）",
  "api_desc_attach_thing_principal": "将证书（主体）连接到 Thing 进行身份验证",
  "api_output_empty_success": "成功时返回空响应",
  "api_desc_create_policy": "使用指定权限创建 IoT 策略",
  "api_input_policy_name_doc": "policyName、policyDocument（JSON 权限）",
  "api_output_policy_details": "policyName、policyArn、policyDocument、policyVersionId",
  "api_desc_attach_policy": "将 IoT 策略连接到证书进行授权",
  "api_input_policy_cert": "policyName、target（证书 ARN）",
  "api_desc_list_certificates": "列出 AWS 账户中的所有证书",
  "api_output_certificates_list": "包含 certificateId、certificateArn、status、creationDate 的 certificates[]",
  "api_desc_update_certificate": "更新证书状态（ACTIVE/INACTIVE）",
  "api_input_cert_id_status": "certificateId、newStatus",
  "api_desc_list_policies": "列出 AWS 账户中的所有 IoT 策略",
  "api_output_policies_list": "包含 policyName、policyArn 的 policies[]",
  "api_desc_list_targets_for_policy": "列出连接了特定策略的所有证书",
  "api_input_policy_name": "policyName",
  "api_output_target_arns": "targetArns[]（证书 ARN）",
  "api_desc_detach_policy": "从证书分离 IoT 策略",
  "api_desc_register_cert_without_ca": "在没有 CA 验证的情况下向 AWS IoT 注册外部证书",
  "api_input_optional_pagination": "无（可选: pageSize、marker、ascendingOrder）",
  "api_input_cert_pem_active": "certificatePem（PEM 格式的证书）、setAsActive",
  "api_output_cert_arn_id": "certificateArn、certificateId",
  "debug_full_error": "🔍 调试: 完整错误响应:",
  "debug_full_traceback": "🔍 调试: 完整回溯:",
  "debug_client_config": "🔍 调试: 客户端配置:",
  "debug_session_complete": "🔍 调试: 会话完成，包含详细的 API 日志",
  "api_error": "❌ AWS API 错误在",
  "missing_param_error": "❌ 缺少必需参数在",
  "invalid_value_error": "❌ 无效值在",
  "unexpected_error": "❌ 意外错误在"
}