{
  "title": "⚙️ AWS IoT 규칙 엔진 탐색기",
  "separator": "============================================================",
  "aws_context_info": "🌍 AWS 컨텍스트 정보:",
  "account_id": "계정 ID",
  "region": "리전",
  "aws_context_error": "⚠️ AWS 컨텍스트를 가져올 수 없습니다:",
  "aws_credentials_reminder": "   AWS 자격 증명이 구성되어 있는지 확인하세요",
  "description_intro": "이 스크립트는 AWS IoT 규칙 엔진 개념을 가르칩니다:",
  "rules_concepts": [
    "• IoT 규칙 엔진 SQL 구문 및 메시지 라우팅",
    "• SELECT, FROM, WHERE 절을 사용한 토픽 필터링", 
    "• 재게시 작업 및 IAM 역할 구성",
    "• 규칙 생명주기 관리 (생성, 활성화, 비활성화, 삭제)",
    "• 실시간 규칙 테스트 및 검증",
    "• 각 작업에 대한 완전한 API 세부 정보"
  ],
  "debug_enabled": "🔍 디버그 모드 활성화됨",
  "debug_features": [
    "• 향상된 AWS IoT API 로깅",
    "• 상세한 규칙 페이로드 및 IAM 작업", 
    "• 확장된 오류 진단"
  ],
  "tip": "💡 팁: 향상된 로깅을 위해 --debug 또는 -d 플래그를 사용하세요",
  "press_enter": "계속하려면 Enter를 누르세요...",
  "goodbye": "👋 안녕히 가세요!",
  "main_menu": "📋 IoT 규칙 엔진 메뉴:",
  "menu_options": [
    "1. 모든 IoT 규칙 나열",
    "2. 특정 IoT 규칙 설명",
    "3. 새 IoT 규칙 생성", 
    "4. 샘플 메시지로 IoT 규칙 테스트",
    "5. IoT 규칙 관리 (활성화/비활성화/삭제)",
    "6. 종료"
  ],
  "select_option": "옵션 선택 (1-6): ",
  "invalid_choice": "❌ 잘못된 선택입니다. 1-6을 선택하세요.",
  "learning_moments": {
    "rules_foundation": {
      "title": "📚 학습 포인트: IoT 규칙 엔진",
      "content": "AWS IoT 규칙 엔진은 SQL과 유사한 쿼리를 사용하여 장치의 메시지를 처리하고 라우팅합니다. 규칙은 Lambda, DynamoDB 또는 S3와 같은 다양한 AWS 서비스로 메시지를 필터링, 변환 및 라우팅할 수 있습니다. 이를 통해 장치 측 로직 변경 없이 실시간 데이터 처리, 알림 및 더 넓은 AWS 아키텍처와의 통합이 가능합니다.",
      "next": "메시지 처리를 위한 IoT 규칙을 생성하고 관리할 것입니다"
    },
    "rules_inventory": {
      "title": "📚 학습 포인트: 규칙 인벤토리 및 관리", 
      "content": "IoT 규칙을 나열하면 계정에서 현재 활성화된 모든 메시지 처리 로직을 보여줍니다. 각 규칙에는 이름, SQL 문 및 작업이 있습니다. 이 인벤토리는 데이터 흐름을 이해하고, 사용하지 않는 규칙을 식별하며, IoT 메시지 처리 파이프라인을 효과적으로 관리하는 데 도움이 됩니다.",
      "next": "계정의 모든 IoT 규칙을 나열할 것입니다"
    },
    "rule_analysis": {
      "title": "📚 학습 포인트: 규칙 분석 및 문제 해결",
      "content": "규칙을 설명하면 SQL 쿼리, 작업 및 메타데이터를 포함한 완전한 구성이 드러납니다. 이 상세한 보기는 메시지 라우팅 문제를 해결하고, 규칙 로직을 이해하며, 규칙이 사용 사례에 맞게 올바르게 구성되었는지 확인하는 데 필수적입니다.",
      "next": "특정 규칙의 구성을 검토할 것입니다"
    },
    "rule_creation": {
      "title": "📚 학습 포인트: 규칙 생성 및 메시지 라우팅",
      "content": "IoT 규칙을 생성하면 장치의 메시지가 어떻게 처리되고 라우팅되는지 정의됩니다. 규칙은 SQL과 유사한 구문을 사용하여 메시지를 필터링하고 변환한 다음 데이터 저장, 함수 호출 또는 알림 전송과 같은 작업을 트리거합니다. 이를 통해 장치 측 변경 없이 실시간 데이터 처리가 가능합니다.",
      "next": "SQL과 작업을 사용하여 새 IoT 규칙을 생성할 것입니다"
    },
    "rule_testing": {
      "title": "📚 학습 포인트: 규칙 테스트 및 검증",
      "content": "샘플 메시지로 규칙을 테스트하면 SQL 로직을 검증하고 프로덕션에 배포하기 전에 규칙이 예상대로 작동하는지 확인할 수 있습니다. 이는 필터링 오류, 구문 문제 및 메시지 처리 실패나 예상치 못한 동작을 일으킬 수 있는 로직 문제를 발견하는 데 도움이 됩니다.",
      "next": "샘플 MQTT 메시지로 규칙을 테스트할 것입니다"
    },
    "rule_lifecycle": {
      "title": "📚 학습 포인트: 규칙 생명주기 작업",
      "content": "규칙 관리에는 활성화, 비활성화 및 삭제가 포함됩니다. 규칙을 비활성화하면 구성을 잃지 않고 메시지 처리를 중지하고, 삭제하면 영구적으로 제거됩니다. 이 생명주기 관리는 IoT 데이터 처리 파이프라인을 유지, 업데이트 및 문제 해결하는 데 중요합니다.",
      "next": "규칙 상태와 생명주기를 관리할 것입니다"
    }
  },
  "workflow_titles": {
    "list_rules": "📋 IoT 규칙 나열 워크플로",
    "describe_rule": "🔍 IoT 규칙 설명 워크플로", 
    "create_rule": "🔧 IoT 규칙 생성 워크플로",
    "test_rule": "🧪 IoT 규칙 테스트 워크플로",
    "manage_rule": "⚙️ IoT 규칙 관리 워크플로"
  },
  "aws_context_info_label": "🌍 AWS 컨텍스트 정보:",
  "account_id_label": "계정 ID",
  "region_label": "리전",
  "aws_context_error_msg": "⚠️ AWS 컨텍스트를 가져올 수 없습니다:",
  "aws_credentials_config": "   AWS 자격 증명이 구성되어 있는지 확인하세요",
  "main_title": "⚙️ AWS IoT 규칙 엔진 탐색기",
  "aws_config_title": "📍 AWS 구성:",
  "main_description": "실습 규칙 생성 및 관리를 통해 AWS IoT 규칙 엔진을 학습하세요.",
  "main_features": "이 도구는 다음을 보여줍니다:",
  "feature_sql_syntax": "• IoT 규칙 엔진 SQL 구문 및 메시지 라우팅",
  "feature_topic_filtering": "• SELECT, FROM, WHERE 절을 사용한 토픽 필터링",
  "feature_republish_actions": "• 재게시 작업 및 IAM 역할 구성", 
  "feature_lifecycle": "• 규칙 생명주기 관리 (생성, 활성화, 비활성화, 삭제)",
  "learning_moment_title": "📚 학습 포인트: IoT 규칙 엔진",
  "learning_moment_description": "AWS IoT 규칙 엔진은 SQL과 유사한 쿼리를 사용하여 장치의 메시지를 처리하고 라우팅합니다. 규칙은 Lambda, DynamoDB 또는 S3와 같은 다양한 AWS 서비스로 메시지를 필터링, 변환 및 라우팅할 수 있습니다. 이를 통해 장치 측 로직 변경 없이 실시간 데이터 처리, 알림 및 더 넓은 AWS 아키텍처와의 통합이 가능합니다.",
  "next_action": "🔄 다음: 메시지 처리를 위한 IoT 규칙을 생성하고 관리할 것입니다",
  "press_enter_continue": "계속하려면 Enter를 누르세요...",
  "debug_mode_enabled": "🔍 디버그 모드 활성화됨",
  "debug_features_list": [
    "• 향상된 AWS IoT API 로깅",
    "• 상세한 규칙 페이로드 및 IAM 작업",
    "• 확장된 오류 진단"
  ],
  "debug_tip": "💡 팁: 향상된 로깅을 위해 --debug 또는 -d 플래그를 사용하세요",
  "menu_title": "📋 IoT 규칙 엔진 메뉴:",
  "menu_option_1": "1. 모든 IoT 규칙 나열",
  "menu_option_2": "2. 특정 IoT 규칙 설명", 
  "menu_option_3": "3. 새 IoT 규칙 생성",
  "menu_option_4": "4. 샘플 메시지로 IoT 규칙 테스트",
  "menu_option_5": "5. IoT 규칙 관리 (활성화/비활성화/삭제)",
  "menu_option_6": "6. 종료",
  "press_enter_menu": "계속하려면 Enter를 누르세요...",
  "learning_moment_inventory": "📚 학습 포인트: 규칙 인벤토리 및 관리",
  "learning_moment_inventory_desc": "IoT 규칙을 나열하면 계정에서 현재 활성화된 모든 메시지 처리 로직을 보여줍니다. 각 규칙에는 이름, SQL 문 및 작업이 있습니다. 이 인벤토리는 데이터 흐름을 이해하고, 사용하지 않는 규칙을 식별하며, IoT 메시지 처리 파이프라인을 효과적으로 관리하는 데 도움이 됩니다.",
  "next_list_rules": "🔄 다음: 계정의 모든 IoT 규칙을 나열할 것입니다",
  "learning_moment_analysis": "📚 학습 포인트: 규칙 분석 및 문제 해결",
  "learning_moment_analysis_desc": "규칙을 설명하면 SQL 쿼리, 작업 및 메타데이터를 포함한 완전한 구성이 드러납니다. 이 상세한 보기는 메시지 라우팅 문제를 해결하고, 규칙 로직을 이해하며, 규칙이 사용 사례에 맞게 올바르게 구성되었는지 확인하는 데 필수적입니다.",
  "next_examine_rule": "🔄 다음: 특정 규칙의 구성을 검토할 것입니다",
  "learning_moment_creation": "📚 학습 포인트: 규칙 생성 및 메시지 라우팅",
  "learning_moment_creation_desc": "IoT 규칙을 생성하면 장치의 메시지가 어떻게 처리되고 라우팅되는지 정의됩니다. 규칙은 SQL과 유사한 구문을 사용하여 메시지를 필터링하고 변환한 다음 데이터 저장, 함수 호출 또는 알림 전송과 같은 작업을 트리거합니다. 이를 통해 장치 측 변경 없이 실시간 데이터 처리가 가능합니다.",
  "next_create_rule": "🔄 다음: SQL과 작업을 사용하여 새 IoT 규칙을 생성할 것입니다",
  "learning_moment_testing": "📚 학습 포인트: 규칙 테스트 및 검증",
  "learning_moment_testing_desc": "샘플 메시지로 규칙을 테스트하면 SQL 로직을 검증하고 프로덕션에 배포하기 전에 규칙이 예상대로 작동하는지 확인할 수 있습니다. 이는 필터링 오류, 구문 문제 및 메시지 처리 실패나 예상치 못한 동작을 일으킬 수 있는 로직 문제를 발견하는 데 도움이 됩니다.",
  "next_test_rule": "🔄 다음: 샘플 MQTT 메시지로 규칙을 테스트할 것입니다",
  "learning_moment_lifecycle": "📚 학습 포인트: 규칙 생명주기 작업", 
  "learning_moment_lifecycle_desc": "규칙 관리에는 활성화, 비활성화 및 삭제가 포함됩니다. 규칙을 비활성화하면 구성을 잃지 않고 메시지 처리를 중지하고, 삭제하면 영구적으로 제거됩니다. 이 생명주기 관리는 IoT 데이터 처리 파이프라인을 유지, 업데이트 및 문제 해결하는 데 중요합니다.",
  "next_manage_rule": "🔄 다음: 규칙 상태와 생명주기를 관리할 것입니다",
  "debug_operation": "🔍 디버그: {operation}",
  "debug_input": "📥 입력: {input}",
  "debug_completed": "✅ {operation} 완료",
  "debug_output": "📤 출력: {output}",
  "debug_error_code": "🔍 디버그: 오류 코드: {code}",
  "list_rules_title": "IoT 규칙 나열",
  "no_rules_found": "📋 계정에서 IoT 규칙을 찾을 수 없습니다",
  "create_first_rule": "💡 옵션 3을 사용하여 첫 번째 규칙을 생성하세요",
  "found_rules": "📋 {count}개의 IoT 규칙을 찾았습니다:",
  "rule_status_disabled": "🔴 비활성화됨",
  "rule_status_enabled": "🟢 활성화됨", 
  "created_label": "📅 생성됨: {date}",
  "debug_rule_arn": "🔍 디버그: 규칙 ARN: {arn}",
  "sql_label": "📝 SQL: {sql}",
  "actions_count": "🎯 작업: {count}개 구성됨",
  "action_republish": "재게시 대상: {topic}",
  "action_s3": "S3 버킷: {bucket}",
  "action_lambda": "Lambda: {function}",
  "describe_rule_title": "IoT 규칙 설명",
  "list_rules_for_selection": "선택을 위한 IoT 규칙 나열",
  "available_rules": "📋 사용 가능한 규칙:",
  "select_rule_describe": "설명할 규칙 선택 (1-{count}): ",
  "invalid_selection_range": "❌ 잘못된 선택입니다. 1-{count}을 입력하세요",
  "enter_valid_number": "❌ 유효한 숫자를 입력하세요",
  "rule_details_title": "📋 규칙 세부 정보: {name}",
  "sql_statement_label": "📝 SQL 문:",
  "sql_breakdown_label": "📖 SQL 분석:",
  "select_clause": "🔍 SELECT: {clause}",
  "from_clause": "📥 FROM: {clause}",
  "where_clause": "🔍 WHERE: {clause}",
  "actions_title": "🎯 작업 ({count}):",
  "action_type": "작업 유형: {type}",
  "target_topic": "📤 대상 토픽: {topic}",
  "role_arn": "🔑 역할 ARN: {arn}",
  "qos_label": "🏷️  QoS: {qos}",
  "bucket_label": "🪣 버킷: {bucket}",
  "key_label": "📁 키: {key}",
  "function_arn": "⚡ 함수 ARN: {arn}",
  "error_action_title": "❌ 오류 작업:",
  "error_action_type": "유형: {type}",
  "error_action_topic": "토픽: {topic}",
  "rule_metadata_title": "📊 규칙 메타데이터:",
  "rule_status": "🔄 상태: {status}",
  "rule_created": "📅 생성됨: {date}",
  "debug_complete_payload": "🔍 디버그: 완전한 규칙 페이로드:",
  "create_rule_title": "IoT 규칙 생성",
  "create_learning_objectives": "🎓 학습 목표:",
  "objective_sql_syntax": "• IoT 규칙 엔진 SQL 구문 이해",
  "objective_topic_filtering": "• 토픽 필터링 및 메시지 라우팅 학습",
  "objective_sql_clauses": "• SELECT, FROM, WHERE 절 연습",
  "objective_republish_actions": "• 적절한 IAM 역할로 재게시 작업 구성",
  "enter_rule_name": "📝 규칙 이름 입력 (영숫자와 밑줄만): ",
  "invalid_rule_name": "❌ 규칙 이름은 영숫자와 밑줄만 포함해야 합니다",
  "rule_name_confirmed": "✅ 규칙 이름: {name}",
  "enter_rule_description": "📖 규칙 설명 입력 (선택사항): ",
  "default_rule_description": "IoT 메시지 처리를 위한 학습 규칙",
  "rule_description_confirmed": "✅ 규칙 설명: {description}",
  "building_sql_title": "📖 IoT 규칙 엔진용 SQL 문 구축",
  "sql_template": "💡 템플릿: SELECT <속성> FROM '<토픽_패턴>' WHERE <조건>",
  "topic_configuration_title": "📡 토픽 패턴 구성",
  "topic_option_template": "1. 미리 정의된 템플릿 사용: testRulesEngineTopic/<deviceId>/<eventType>",
  "topic_option_custom": "2. 사용자 정의 토픽 패턴 정의",
  "select_topic_option": "토픽 구성 선택 (1-2): ",
  "available_event_types": "🎯 사용 가능한 이벤트 유형:",
  "custom_event_type": "사용자 정의 이벤트 유형",
  "select_event_type": "이벤트 유형 선택 (1-{count}): ",
  "enter_custom_event_type": "사용자 정의 이벤트 유형 입력: ",
  "event_type_empty": "❌ 이벤트 유형은 비어있을 수 없습니다",
  "invalid_event_selection": "❌ 잘못된 선택",
  "enter_custom_topic": "📝 사용자 정의 토픽 패턴 입력 (와일드카드에 + 사용): ",
  "custom_topic_examples": "💡 예시: 'sensors/+/data', 'devices/+/telemetry/+', 'factory/floor1/+/status'",
  "custom_topic_empty": "❌ 토픽 패턴은 비어있을 수 없습니다",
  "topic_pattern_confirmed": "✅ 토픽 패턴: {pattern}",
  "select_clause_title": "🔍 SELECT 절 - {event_type} 이벤트의 속성:",
  "custom_selection": "사용자 정의 선택",
  "select_attributes": "속성 선택 (1-{count}): ",
  "enter_custom_select": "사용자 정의 SELECT 절 입력: ",
  "select_clause_empty": "❌ SELECT 절은 비어있을 수 없습니다",
  "select_clause_confirmed": "✅ SELECT: {clause}",
  "where_clause_title": "🔍 WHERE 절 (선택사항) - {event_type} 메시지 필터링:",
  "where_examples_title": "💡 {event_type}의 예시:",
  "add_where_condition": "WHERE 조건을 추가하시겠습니까? (y/N): ",
  "enter_where_condition": "WHERE 조건 입력: ",
  "where_clause_confirmed": "✅ WHERE: {clause}",
  "empty_where_warning": "⚠️ 빈 WHERE 절, 필터 없이 진행",
  "complete_sql_title": "📝 완전한 SQL 문:",
  "input_validation_error": "❌ 입력 검증 오류: {error}",
  "validation_tip": "💡 영숫자, 공백, 기본 연산자만 사용하세요",
  "republish_config_title": "📤 재게시 작업 구성",
  "enter_target_topic": "재게시할 대상 토픽 입력 (예: 'processed/temperature'): ",
  "default_target_topic": "✅ 기본 대상 토픽 사용: {topic}",
  "iam_role_setup": "🔑 규칙 작업을 위한 IAM 역할 설정",
  "iam_role_failed": "❌ IAM 역할 생성/확인 실패. 규칙을 생성할 수 없습니다.",
  "creating_rule": "🔧 IoT 규칙 생성 중...",
  "debug_rule_payload": "🔍 디버그: 규칙 페이로드:",
  "create_rule_attempt": "IoT 규칙 '{name}' 생성 (시도 {attempt}/{max_attempts})",
  "iam_propagation_wait": "⏳ IAM 역할이 아직 전파 중일 수 있습니다. 재시도 전 10초 대기 중...",
  "create_rule_failed": "❌ {attempts}번 시도 후 규칙 생성 실패",
  "rule_created_success": "🎉 규칙 '{name}'이 성공적으로 생성되었습니다!",
  "rule_summary_title": "📋 규칙 요약:",
  "summary_name": "📝 이름: {name}",
  "summary_source_topic": "📥 소스 토픽: {topic}",
  "summary_target_topic": "📤 대상 토픽: {topic}",
  "summary_sql": "🔍 SQL: {sql}",
  "summary_role": "🔑 역할: {role}",
  "testing_rule_title": "💡 규칙 테스트:",
  "testing_step_1": "1. 메시지 게시: {source_topic}",
  "testing_step_2": "2. 구독: {target_topic}",
  "testing_step_3": "3. 메시지가 올바르게 라우팅되는지 확인",
  "example_test_message": "📖 예시 테스트 메시지:",
  "debug_existing_role": "🔍 디버그: 기존 IAM 역할 사용: {arn}",
  "using_existing_role": "✅ 기존 IAM 역할 사용: {name}",
  "creating_iam_role": "🔧 IAM 역할 생성: {name}",
  "error_checking_role": "❌ IAM 역할 확인 오류: {error}",
  "create_iam_role_operation": "IAM 역할 '{name}' 생성",
  "create_iam_policy_operation": "IAM 정책 '{name}' 생성",
  "attach_policy_operation": "역할에 정책 연결",
  "iam_role_created_success": "✅ IAM 역할과 정책이 성공적으로 생성되었습니다",
  "iam_role_propagation": "⏳ IAM 역할 전파 대기 중 (10초)...",
  "manage_rule_title": "IoT 규칙 관리",
  "list_rules_for_management": "관리를 위한 IoT 규칙 나열",
  "select_rule_manage": "관리할 규칙 선택 (1-{count}): ",
  "managing_rule": "🔧 규칙 관리 중: {name}",
  "current_status": "📊 현재 상태: {status}",
  "management_options": "📋 관리 옵션:",
  "enable_rule": "1. 🟢 규칙 활성화",
  "disable_rule": "1. 🔴 규칙 비활성화",
  "delete_rule": "2. 🗑️ 규칙 삭제",
  "cancel_management": "3. ↩️ 취소",
  "select_action": "작업 선택 (1-3): ",
  "invalid_action_selection": "❌ 잘못된 선택입니다. 1-3을 입력하세요",
  "get_current_rule_settings": "현재 규칙 설정 가져오기",
  "enable_rule_operation": "규칙 '{name}' 활성화",
  "disable_rule_operation": "규칙 '{name}' 비활성화",
  "rule_status_updated": "✅ 규칙 '{name}'이 이제 {status}입니다",
  "failed_get_rule_settings": "❌ '{name}'의 현재 규칙 설정 가져오기 실패",
  "confirm_delete_rule": "⚠️ 규칙 '{name}'을 삭제하시겠습니까? (y/N): ",
  "delete_rule_operation": "규칙 '{name}' 삭제",
  "rule_deleted_success": "✅ 규칙 '{name}'이 성공적으로 삭제되었습니다",
  "rule_deletion_cancelled": "❌ 규칙 삭제가 취소되었습니다",
  "management_cancelled": "↩️ 관리가 취소되었습니다",
  "test_rule_title": "IoT 규칙 테스트",
  "test_learning_objectives": "🎓 학습 목표:",
  "test_objective_1": "• 규칙 토픽 매칭 및 WHERE 조건 테스트",
  "test_objective_2": "• 메시지 라우팅 동작 이해",
  "test_objective_3": "• 매칭되는 메시지와 매칭되지 않는 메시지로 연습",
  "test_objective_4": "• 실시간 규칙 처리 관찰",
  "list_rules_for_testing": "테스트를 위한 IoT 규칙 나열",
  "no_rules_for_testing": "📋 IoT 규칙을 찾을 수 없습니다",
  "create_rule_first": "💡 먼저 옵션 3을 사용하여 규칙을 생성하세요",
  "select_rule_test": "테스트할 규칙 선택 (1-{count}): ",
  "get_rule_details_testing": "테스트를 위한 규칙 세부 정보 가져오기",
  "testing_rule": "📋 규칙 테스트 중: {name}",
  "sql_display": "📝 SQL: {sql}",
  "source_topic_pattern": "📥 소스 토픽 패턴: {pattern}",
  "where_condition_display": "🔍 WHERE 조건: {condition}",
  "target_topics_display": "📤 대상 토픽: {topics}",
  "finding_devices_certificates": "🔍 인증서가 있는 장치 찾는 중...",
  "no_certificates_directory": "❌ 인증서 디렉토리를 찾을 수 없습니다.",
  "run_certificate_manager": "💡 먼저 certificate_manager.py를 실행하여 인증서를 생성하세요",
  "no_devices_certificates": "❌ 인증서가 있는 장치를 찾을 수 없습니다.",
  "found_devices_certificates": "📋 인증서가 있는 {count}개의 장치를 찾았습니다:",
  "using_device": "✅ 장치 사용: {name}",
  "selected_device": "✅ 선택된 장치: {name}",
  "select_device": "장치 선택 (1-{count}): ",
  "invalid_device_selection": "❌ 잘못된 선택",
  "get_iot_endpoint": "IoT 엔드포인트 가져오기",
  "cannot_get_endpoint": "❌ IoT 엔드포인트를 가져올 수 없습니다. 테스트에는 MQTT 연결이 필요합니다.",
  "interactive_testing_title": "🧪 대화형 규칙 테스트",
  "connecting_to_endpoint": "📡 연결 중: {endpoint}",
  "using_device_info": "📱 장치 사용: {device}",
  "connecting_aws_iot": "🔌 AWS IoT에 연결 중...",
  "connected_aws_iot": "✅ AWS IoT에 연결됨",
  "subscribed_target_topic": "📡 대상 토픽 구독: {topic}",
  "rule_testing_instructions": "🎯 규칙 테스트 지침:",
  "instruction_1": "• 각 메시지가 규칙과 일치해야 하는지 질문받게 됩니다",
  "instruction_2": "• 토픽 매칭: 토픽이 패턴에 맞는가?",
  "instruction_3": "• WHERE 조건: 메시지 내용이 필터와 일치하는가?",
  "instruction_4": "• 대상 토픽에서 규칙 출력 메시지 관찰",
  "instruction_5": "• 테스트를 종료하려면 'quit' 입력",
  "test_message_header": "🧪 테스트 메시지 #{count}",
  "topic_pattern_display": "📥 토픽 패턴: {pattern}",
  "no_specific_pattern": "특정 패턴 없음",
  "should_match_topic": "이 메시지가 토픽 패턴과 일치해야 합니까? (y/N/quit): ",
  "generated_topic": "📡 생성된 토픽: {topic}",
  "where_condition_label": "🔍 WHERE 조건: {condition}",
  "should_match_where": "이 메시지가 WHERE 조건과 일치해야 합니까? (y/n): ",
  "test_message_display": "📝 테스트 메시지:",
  "topic_label": "📡 토픽: {topic}",
  "payload_label": "💬 페이로드: {payload}",
  "prediction_should_trigger": "🔮 예측: 규칙이 트리거되어야 함",
  "prediction_should_not_trigger": "🔮 예측: 규칙이 트리거되지 않아야 함",
  "publishing_test_message": "📤 테스트 메시지 게시 중...",
  "waiting_rule_processing": "⏳ 규칙 처리를 위해 3초 대기 중...",
  "expected_trigger_no_output": "⚠️ 규칙이 트리거될 것으로 예상했지만 출력을 받지 못했습니다",
  "unexpected_trigger": "⚠️ 규칙이 예상치 못하게 트리거되었습니다",
  "rule_triggered_expected": "✅ 규칙이 예상대로 트리거되었습니다!",
  "rule_correctly_not_triggered": "✅ 규칙이 올바르게 트리거되지 않았습니다",
  "press_enter_next_test": "다음 테스트로 계속하려면 Enter를 누르세요...",
  "testing_error": "❌ 테스트 오류: {error}",
  "disconnecting_aws_iot": "🔌 AWS IoT에서 연결 해제 중...",
  "disconnected_aws_iot": "✅ AWS IoT에서 연결 해제됨",
  "rule_output_received": "🔔 규칙 출력 수신됨 [{timestamp}]",
  "message_topic": "📤 토픽: {topic}",
  "message_content": "💬 메시지: {message}",
  "rule_processed_forwarded": "✅ 규칙 '{name}'이 메시지를 처리하고 전달했습니다!",
  "connection_interrupted": "⚠️ 연결 중단됨: {error}",
  "connection_resumed": "✅ 연결 재개됨",
  "operation_failed": "❌ {operation} 실패: {error}",
  "unexpected_error": "❌ 예상치 못한 오류: {error}",
  "interrupted_by_user": "🛑 사용자에 의해 중단됨",
  "invalid_characters_clause": "{clause_type} 절에 잘못된 문자가 있습니다. 영숫자, 공백, 기본 연산자만 허용됩니다.",
  "dangerous_pattern_detected": "{clause_type} 절에서 잠재적으로 위험한 패턴 '{pattern}'이 감지되었습니다.",
  "invalid_characters_topic": "토픽 패턴에 잘못된 문자가 있습니다. 영숫자, 하이픈, 밑줄, 슬래시, + 와일드카드만 허용됩니다.",
  "header_separator": "============================================================",
  "step_separator": "----------------------------------------------------",
  "rule_separator": "----------------------------------------"
}