{
  "title": "🧹 AWS IoT Sample Data Cleanup",
  "separator": "============================================================",
  "aws_context_info": "🌍 AWS Context Information:",
  "account_id": "Account ID",
  "region": "Region",
  "aws_context_error": "⚠️ Could not retrieve AWS context:",
  "aws_credentials_reminder": "   Make sure AWS credentials are configured",
  "description_intro": "This script will clean up ONLY the sample resources created by:",
  "setup_scripts": [
    "• setup_sample_data.py",
    "• certificate_manager.py"
  ],
  "no_affect_other": "It will NOT affect other IoT resources in your account.",
  "debug_enabled": "🔍 DEBUG MODE ENABLED",
  "debug_features": [
    "• Will show detailed API requests and responses",
    "• Includes complete error details and tracebacks",
    "• Educational API call documentation"
  ],
  "tip": "💡 Tip: Use --debug or -d flag to see detailed API calls",
  "resources_to_cleanup": "🎯 Resources to be cleaned up:",
  "things_prefix": "• Things starting with '{}' (Vehicle-VIN-001, Vehicle-VIN-002, etc.)",
  "thing_types": "• Thing Types: {} (will be deprecated first)",
  "thing_groups": "• Thing Groups: {}",
  "certificates_attached": "• Certificates attached to sample Things",
  "local_cert_files": "• Local certificate files in ./certificates/",
  "policies_manual_review": "• Policies will be listed for manual review",
  "continue_cleanup": "Continue with cleanup? (y/N): ",
  "cleanup_cancelled": "Cleanup cancelled",
  "client_initialized": "✅ AWS IoT client initialized",
  "debug_client_config": "🔍 DEBUG: Client configuration:",
  "service_label": "Service",
  "api_version_label": "API Version",
  "learning_moment_title": "📚 LEARNING MOMENT: Resource Cleanup & Lifecycle Management",
  "learning_moment_content": "Proper resource cleanup is essential in IoT deployments to avoid unnecessary costs and maintain security. AWS IoT resources have dependencies - certificates must be detached before deletion, Thing Types must be deprecated before removal, and policies should be carefully reviewed since they may be shared across devices.",
  "next_cleanup": "🔄 NEXT: We will safely clean up sample resources in the correct order",
  "press_enter_continue": "Press Enter to continue...",
  "step1_title": "🗑️  Step 1: Cleaning up sample Things and certificates...",
  "step_separator": "----------------------------------------------------",
  "listing_things": "🔍 Listing all Things to find sample Things",
  "found_sample_things": "📋 Found {} sample Things to clean up",
  "processing_thing": "📱 Processing Thing: {}",
  "listing_principals": "🔍 Listing principals (certificates) for Thing: {}",
  "found_certificates": "🔐 Found {} certificate(s) attached to {}",
  "deleting_thing": "🗑️  Deleting Thing: {}",
  "step2_title": "🔐 Step 2: Checking for orphaned certificates...",
  "listing_certificates": "🔍 Listing all certificates to check for orphaned ones",
  "found_certificates_account": "📋 Found {} certificate(s) in account",
  "certificate_info": "ℹ️  Certificate: {} (Status: {})",
  "checking_certificate_things": "🔍 Checking if certificate {} is attached to any Things",
  "cert_attached_sample_things": "⚠️  Certificate {} was attached to sample Things: {}",
  "cert_should_cleanup_step1": "   This certificate should have been cleaned up in Step 1",
  "cert_not_attached_sample": "✅ Certificate {} is not attached to sample Things",
  "could_not_check_things": "⚠️  Could not check Things for certificate {}: {}",
  "step3_title": "📄 Step 3: Cleaning up sample policies...",
  "listing_policies": "🔍 Listing all policies to check for cleanup",
  "found_policies_account": "📋 Found {} policies in account",
  "checking_policy": "📄 Checking policy: {}",
  "checking_policy_targets": "🔍 Checking targets for policy: {}",
  "policy_attached_targets": "   ⚠️  Policy {} is attached to {} target(s), skipping",
  "deleting_unattached_policy": "   🗑️  Deleting unattached policy: {}",
  "error_checking_policy": "   ❌ Error checking policy {}: {}",
  "policy_no_sample_patterns": "   ℹ️  Policy {} doesn't match sample patterns, skipping",
  "policy_cleanup_summary": "📊 Policy cleanup summary:",
  "deleted_policies": "   ✅ Deleted: {} policies",
  "skipped_policies": "   ⚠️  Skipped: {} policies (still attached to resources)",
  "certificate_cleanup_summary": "📊 Certificate cleanup summary:",
  "cleaned_certificates": "   ✅ Cleaned: {} certificates",
  "skipped_certificates": "   ⚠️  Skipped: {} certificates",
  "skipped_certs_production": "💡 Skipped certificates appear to be production certificates or have unclear usage patterns",
  "manual_cert_deletion": "   If you're sure they're from learning, you can manually delete them from the AWS console",
  "skipped_policies_note": "💡 Skipped policies are still attached to certificates or other resources",
  "policies_cleanup_auto": "   They will be cleaned up automatically when certificates are deleted",
  "policies_manual_cleanup": "   Or you can manually detach and delete them if needed",
  "step4_title": "📁 Step 4: Cleaning up sample Thing Groups...",
  "listing_thing_groups": "🔍 Listing all Thing Groups to find sample groups",
  "found_sample_groups": "📋 Found {} sample Thing Groups to clean up",
  "deleting_thing_group": "📁 Deleting Thing Group: {}",
  "step5_title": "🏷️  Step 5: Cleaning up sample Thing Types...",
  "listing_thing_types": "🔍 Listing all Thing Types to find sample types",
  "found_sample_types": "📋 Found {} sample Thing Types to clean up",
  "no_sample_types": "ℹ️  No sample Thing Types found to clean up",
  "thing_type_deprecated": "ℹ️  Thing Type {} is already deprecated (since {})",
  "thing_type_active": "ℹ️  Thing Type {} is active (needs deprecation)",
  "could_not_check_status": "⚠️  Could not check status of {}: {}",
  "deprecating_active_types": "⚠️  Deprecating {} active Thing Types...",
  "deprecating_thing_type": "🏷️  Deprecating Thing Type: {}",
  "thing_type_deprecated_success": "✅ Thing Type {} deprecated",
  "could_not_deprecate": "❌ Could not deprecate Thing Type {}",
  "aws_constraint_5min": "⏰ AWS IoT Constraint: Thing Types must wait 5 minutes after deprecation before deletion",
  "thing_types_to_delete": "📋 Thing Types to delete:",
  "deprecated_item": "   • {} (deprecated: {})",
  "deletion_options": "🎯 Deletion Options:",
  "wait_5min_delete": "1. Wait 5 minutes now and delete automatically",
  "skip_deletion": "2. Skip deletion (run cleanup again later)",
  "try_deletion_now": "3. Try deletion now (may fail if not enough time has passed)",
  "select_option_1_3": "Select option (1-3): ",
  "waiting_5min": "⏳ Waiting 5 minutes for AWS IoT constraint...",
  "constraint_explanation": "💡 This is required by AWS IoT - Thing Types cannot be deleted immediately after deprecation",
  "time_remaining": "⏰ Time remaining: {:02d}:{:02d} - You can cancel with Ctrl+C",
  "wait_completed": "✅ 5-minute wait period completed!",
  "skipping_deletion": "⏭️  Skipping Thing Type deletion",
  "deletion_tip": "💡 To delete later, run: python cleanup_sample_data.py",
  "types_ready_deletion": "   The Thing Types are already deprecated and will be ready for deletion",
  "attempting_deletion_now": "🚀 Attempting deletion now (may fail due to timing constraint)",
  "invalid_choice_1_3": "❌ Invalid choice. Please enter 1, 2, or 3",
  "deleting_deprecated_types": "🗑️  Deleting deprecated Thing Types...",
  "attempting_delete_type": "🗑️  Attempting to delete Thing Type: {}",
  "deletion_failed_timing": "💡 If deletion failed due to timing, wait a few more minutes and try again",
  "type_ready_deletion": "   The Thing Type {} is deprecated and ready for deletion",
  "cleanup_interrupted": "🛑 Cleanup interrupted by user",
  "types_deprecated_delete_later": "💡 Thing Types that were deprecated can be deleted later by running cleanup again",
  "step6_title": "🌙 Step 6: Device shadows cleanup...",
  "shadows_auto_cleanup": "ℹ️  Device shadows are automatically cleaned up when Things are deleted",
  "no_manual_shadow_cleanup": "   No manual shadow deletion required - AWS IoT handles this automatically",
  "debug_shadow_skipped": "🔍 DEBUG: Shadow cleanup skipped - handled by Thing deletion",
  "shadow_cleanup_completed": "✅ Shadow cleanup completed (automatic)",
  "step7_title": "📋 Step 7: Cleaning up sample IoT rules...",
  "debug_listing_rules": "🔍 DEBUG: Listing all IoT rules",
  "debug_deleting_rule": "🔍 DEBUG: Deleting rule: {}",
  "deleted_rule": "   ✅ Deleted rule: {}",
  "error_deleting_rule": "   ❌ Error deleting rule {}: {}",
  "no_sample_rules": "   ℹ️ No sample rules found to delete",
  "rules_cleanup_summary": "📊 Rules cleanup summary: {} rules deleted",
  "step8_title": "💾 Step 8: Cleaning up local certificate files...",
  "checking_cert_directory": "🔍 Checking for local certificates directory: {}",
  "cert_directory_contents": "📁 Contents of certificates directory:",
  "removed_cert_directory": "✅ Removed local certificates directory: {}",
  "directory_deleted_success": "🔍 Directory {} successfully deleted",
  "error_removing_cert_dir": "❌ Error removing certificates directory: {}",
  "no_cert_directory": "ℹ️  No local certificates directory found",
  "directory_not_exist": "🔍 Directory {} does not exist",
  "checking_sample_cert_dir": "🔍 Checking for sample certificates directory: {}",
  "sample_cert_contents": "📁 Contents of sample-certs directory:",
  "removed_sample_cert_dir": "✅ Removed sample certificates directory: {}",
  "error_removing_sample_dir": "❌ Error removing sample-certs directory: {}",
  "no_sample_cert_dir": "ℹ️  No sample certificates directory found",
  "cleanup_summary_title": "🎉 Cleanup Summary",
  "summary_separator": "==================================================",
  "things_cleaned": "✅ Sample Things cleaned up (Vehicle-VIN-001, Vehicle-VIN-002, etc.)",
  "certificates_cleaned": "✅ Associated certificates cleaned up",
  "groups_cleaned": "✅ Sample Thing Groups cleaned up",
  "types_cleaned": "✅ Sample Thing Types cleaned up",
  "local_files_cleaned": "✅ Local certificate files cleaned up (certificates/ and sample-certs/)",
  "device_state_cleaned": "✅ Device state files cleaned up (device_state.json files)",
  "account_clean": "💡 Your AWS IoT account now only contains non-sample resources",
  "error_generic": "❌ Error: {}",
  "debug_cleanup_completed": "🔍 DEBUG: Cleanup session completed with detailed API logging",
  "api_call_header": "🔍 API Call: {}",
  "api_description": "📖 Description: {}",
  "api_input_params": "📥 Input Parameters:",
  "api_no_params": "📥 Input Parameters: None",
  "api_response": "📤 API Response:",
  "api_empty_response": "Empty response (operation completed successfully)",
  "deleting_resource": "Deleting {}: {}",
  "deleted_resource": "✅ Deleted {}: {}",
  "resource_not_found": "⚠️  {} {} not found, skipping",
  "error_deleting_resource": "❌ Error deleting {} {}: {}",
  "debug_full_error": "🔍 DEBUG: Full error response:",
  "debug_full_traceback": "🔍 DEBUG: Full traceback:",
  "cleaning_certificate": "🔐 Cleaning up certificate: {}",
  "step1_list_policies": "🔍 Step 1: Listing policies attached to certificate",
  "found_attached_policies": "📋 Found {} attached policies",
  "detaching_policy": "🔗 Detaching policy: {}",
  "detaching_cert_from_thing": "🔗 Detaching certificate from Thing: {}",
  "deactivating_certificate": "⏸️  Deactivating certificate: {}",
  "certificate_deactivated": "✅ Certificate {} deactivated",
  "deleting_certificate": "🗑️  Deleting certificate: {}",
  "error_cleaning_certificate": "❌ Error cleaning up certificate {}: {}",
  "goodbye": "👋 Goodbye!"
}