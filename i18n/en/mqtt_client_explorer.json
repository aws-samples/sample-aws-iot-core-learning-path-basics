{
    "title": "📡 AWS IoT MQTT Client Explorer",
    "separator": "============================================================",
    "aws_context_info": "🌍 AWS Context Information:",
    "account_id": "Account ID",
    "region": "Region",
    "aws_context_error": "⚠️ Could not retrieve AWS context:",
    "aws_credentials_reminder": "   Make sure AWS credentials are configured",
    "description_intro": "This script teaches you AWS IoT MQTT communication:",
    "mqtt_concepts": [
        "• Real-time messaging with MQTT protocol",
        "• Certificate-based device authentication",
        "• Topic-based publish/subscribe patterns",
        "• Quality of Service (QoS) levels",
        "• Connection management and error handling",
        "• Complete MQTT protocol details for each operation"
    ],
    "debug_enabled": "🔍 DEBUG MODE ENABLED",
    "debug_features": [
        "• Enhanced MQTT protocol logging",
        "• Full connection and message details",
        "• Extended troubleshooting information"
    ],
    "tip": "💡 Tip: Use --debug or -d flag for enhanced MQTT logging",
    "press_enter": "Press Enter to continue...",
    "goodbye": "👋 Goodbye!",
    "main_menu": "📋 Main Menu:",
    "menu_options": ["1. Connect to AWS IoT Core with Certificate", "2. Exit"],
    "select_option": "Select option (1-2): ",
    "invalid_choice": "❌ Invalid choice. Please select 1-2.",
    "step_establishing_connection": "Establishing MQTT Connection",
    "step_interactive_messaging": "Interactive MQTT Messaging",
    "mqtt_connection_setup": "🔍 DEBUG: MQTT Connection Setup",
    "thing_name_label": "Thing Name",
    "certificate_file_label": "Certificate File",
    "private_key_file_label": "Private Key File",
    "endpoint_label": "Endpoint",
    "connection_parameters": "🔗 Connection Parameters:",
    "client_id_label": "Client ID",
    "port_label": "Port",
    "protocol_label": "Protocol",
    "authentication_label": "Authentication",
    "connecting_to_iot": "🔄 Connecting to AWS IoT Core...",
    "connection_result_debug": "🔍 DEBUG: Connection result:",
    "connection_established": "CONNECTION ESTABLISHED",
    "connection_status_success": "Successfully connected to AWS IoT Core",
    "clean_session_label": "Clean Session",
    "keep_alive_label": "Keep Alive",
    "tls_version_label": "TLS Version",
    "cert_auth_label": "Certificate Authentication",
    "testing_connection_stability": "🔍 DEBUG: Testing MQTT connection stability...",
    "connection_stable": "✅ Connection appears stable and ready for operations",
    "connection_unstable": "⚠️  Connection established but may be unstable:",
    "connection_failed": "❌ Connection failed:",
    "iot_endpoint_discovery": "🌐 AWS IoT Endpoint Discovery",
    "endpoint_type_label": "Endpoint Type",
    "endpoint_type_recommended": "iot:Data-ATS (recommended)",
    "endpoint_url_label": "Endpoint URL",
    "port_mqtt_tls": "8883 (MQTT over TLS)",
    "protocol_mqtt_tls": "MQTT 3.1.1 over TLS",
    "error_getting_endpoint": "❌ Error getting IoT endpoint:",
    "debug_calling_api": "🔍 DEBUG: Calling describe_endpoint API",
    "debug_input_params": "📥 Input Parameters:",
    "debug_api_response": "📤 API Response:",
    "debug_full_traceback": "🔍 DEBUG: Full traceback:",
    "available_devices": "📱 Available Devices ({} found):",
    "no_things_found": "❌ No Things found. Please run setup_sample_data.py first",
    "select_device": "Select device (1-{}):",
    "invalid_selection": "❌ Invalid selection. Please enter 1-{}",
    "enter_valid_number": "❌ Please enter a valid number",
    "operation_cancelled": "🛑 Operation cancelled",
    "selected_device": "✅ Selected device:",
    "debug_calling_list_things": "🔍 DEBUG: Calling list_things API",
    "debug_input_params_none": "📥 Input Parameters: None",
    "debug_api_response_found_things": "📤 API Response: Found {} Things",
    "debug_thing_names": "📊 Thing Names:",
    "debug_calling_list_principals": "🔍 DEBUG: Calling list_thing_principals API",
    "debug_input_params_thing": "📥 Input Parameters:",
    "debug_api_response_principals": "📤 API Response: Found {} principals, {} certificates",
    "debug_certificate_arns": "📊 Certificate ARNs:",
    "no_certificates_found": "❌ No certificates found for device '{}'",
    "run_certificate_manager": "💡 Run certificate_manager.py to create and attach a certificate",
    "using_certificate": "✅ Using certificate:",
    "multiple_certificates_found": "🔐 Multiple certificates found:",
    "select_certificate": "Select certificate (1-{}):",
    "cert_dir_not_found": "❌ Certificate directory not found:",
    "run_cert_manager_files": "💡 Run certificate_manager.py to create certificate files",
    "cert_files_not_found": "❌ Certificate files not found in {}",
    "looking_for_files": "   Looking for: {}.crt and {}.key",
    "cert_files_found": "✅ Certificate files found:",
    "certificate_label": "Certificate",
    "private_key_label": "Private Key",
    "error_selecting_device": "❌ Error selecting device:",
    "connection_interrupted": "CONNECTION INTERRUPTED",
    "error_label": "Error",
    "timestamp_label": "Timestamp",
    "auto_reconnect_label": "Auto Reconnect",
    "auto_reconnect_msg": "AWS IoT SDK will attempt to reconnect automatically",
    "connection_resumed": "CONNECTION RESUMED",
    "return_code_label": "Return Code",
    "session_present_label": "Session Present",
    "status_label": "Status",
    "connection_restored": "Connection restored successfully",
    "resubscribing_topics": "🔄 Re-subscribing to {} topics after reconnection...",
    "resubscribed_to_topic": "   ✅ Re-subscribed to {} (QoS {})",
    "failed_resubscribe": "   ❌ Failed to re-subscribe to {}:",
    "incoming_message": "🔔 INCOMING MESSAGE #{} [{}]",
    "topic_label": "📥 Topic:",
    "qos_label": "🏷️  QoS:",
    "qos_at_most_once": "At most once",
    "qos_at_least_once": "At least once",
    "qos_exactly_once": "Exactly once",
    "payload_size_label": "📊 Payload Size:",
    "flags_label": "🚩 Flags:",
    "duplicate_flag": "🔄 DUPLICATE (retransmitted)",
    "retain_flag": "📌 RETAIN (stored by broker)",
    "mqtt5_properties": "🔧 MQTT5 Properties:",
    "content_type_prop": "📄 Content-Type:",
    "correlation_data_prop": "🔗 Correlation-Data:",
    "message_expiry_prop": "⏰ Message-Expiry:",
    "response_topic_prop": "↩️  Response-Topic:",
    "payload_format_prop": "📝 Payload-Format:",
    "user_properties_prop": "🏷️  User-Properties:",
    "utf8_string": "UTF-8 String",
    "bytes_format": "Bytes",
    "properties_count": "{} properties",
    "message_payload": "💬 Message Payload:",
    "json_format": "   📋 JSON Format:",
    "text_format": "   📝 Text:",
    "error_processing_message": "❌ Error processing received message:",
    "mqtt_prompt": "📡 MQTT> ",
    "not_connected_iot": "❌ Not connected to AWS IoT Core",
    "subscribing_to_topic": "📥 Subscribing to Topic",
    "debug_subscribe_operation": "🔍 DEBUG: MQTT Subscribe Operation",
    "connection_status_debug": "   Connection Status:",
    "connection_object_debug": "   Connection Object:",
    "topic_pattern_debug": "   Topic Pattern:",
    "requested_qos_debug": "   Requested QoS:",
    "converted_qos_debug": "🔍 DEBUG: Converted QoS:",
    "callback_function_debug": "🔍 DEBUG: Callback function:",
    "subscribe_request_sent": "🔍 DEBUG: Subscribe request sent, waiting for response...",
    "packet_id_debug": "   Packet ID:",
    "subscribe_result_received": "🔍 DEBUG: Subscribe result received:",
    "result_debug": "   Result:",
    "result_type_debug": "   Result type:",
    "subscription_established": "SUBSCRIPTION ESTABLISHED",
    "qos_requested_label": "QoS Requested",
    "qos_granted_label": "QoS Granted",
    "packet_id_label": "Packet ID",
    "status_subscribed": "Successfully subscribed",
    "wildcard_support": "Wildcard Support",
    "wildcard_support_msg": "AWS IoT supports + (single level) and # (multi level)",
    "subscription_failed": "❌ Subscription failed:",
    "detailed_error_info": "🔍 Detailed Error Information:",
    "error_type_label": "   Error Type:",
    "error_message_label": "   Error Message:",
    "troubleshooting_timeout": "💡 Troubleshooting: Subscription timeout",
    "timeout_reasons": [
        "   • MQTT connection may be unstable",
        "   • Network connectivity issues",
        "   • AWS IoT endpoint may be unreachable"
    ],
    "troubleshooting_auth": "💡 Troubleshooting: Authorization failed",
    "auth_reasons": [
        "   • Certificate may not be ACTIVE",
        "   • Certificate may not be attached to Thing",
        "   • Policy may not be attached to certificate"
    ],
    "troubleshooting_invalid_topic": "💡 Troubleshooting: Invalid topic format",
    "invalid_topic_reasons": [
        "   • Topics cannot start with '/' or '$' (unless AWS reserved)",
        "   • Use alphanumeric characters, hyphens, and forward slashes",
        "   • Maximum topic length is 256 characters"
    ],
    "troubleshooting_connection": "💡 Troubleshooting: Connection issue",
    "connection_reasons": [
        "   • MQTT connection may have been lost",
        "   • Certificate files may be corrupted",
        "   • Endpoint URL may be incorrect"
    ],
    "troubleshooting_unknown": "💡 Troubleshooting: Unknown subscription failure",
    "unknown_reasons": [
        "   • Run 'debug {}' command for detailed diagnostics",
        "   • Check AWS IoT logs in CloudWatch if enabled"
    ],
    "publishing_message": "📤 Publishing Message",
    "content_type_label": "Content-Type",
    "mqtt5_properties_label": "🔧 MQTT5 Properties:",
    "published_timestamp": "✅ [{}] PUBLISHED",
    "delivery_ack_required": "🔄 Delivery: Acknowledgment required (QoS {})",
    "delivery_fire_forget": "🚀 Delivery: Fire-and-forget (QoS 0)",
    "publish_failed": "❌ Publish failed:",
    "troubleshooting_publish_timeout": "💡 Troubleshooting: Publish timeout",
    "troubleshooting_payload_large": "💡 Troubleshooting: Payload size limit exceeded",
    "payload_limit_msg": "   • AWS IoT message size limit is 128 KB",
    "current_payload_size": "   • Current payload size: {} bytes",
    "mqtt_topic_guidelines": "💡 MQTT Topic Guidelines:",
    "topic_guidelines": [
        "   • Use forward slashes (/) to separate topic levels",
        "   • Avoid spaces and special characters",
        "   • Use descriptive names: device/sensor/temperature",
        "   • Wildcards: + (single level), # (multi-level)"
    ],
    "interactive_commands": "📋 Interactive Commands:",
    "command_list": [
        "   • 'sub <topic>' - Subscribe to topic (QoS 0)",
        "   • 'sub1 <topic>' - Subscribe to topic (QoS 1)",
        "   • 'unsub <topic>' - Unsubscribe from topic",
        "   • 'pub <topic> <message>' - Publish message (QoS 0)",
        "   • 'pub1 <topic> <message>' - Publish message (QoS 1)",
        "   • 'json <topic> key=val...' - Publish JSON message",
        "   • 'test' - Send test message",
        "   • 'status' - Show connection status",
        "   • 'messages' - Show message history",
        "   • 'debug' - Connection diagnostics",
        "   • 'help' - Show this help",
        "   • 'quit' - Exit interactive mode"
    ],
    "enter_command": "Enter command (or 'help' for options):",
    "invalid_command": "❌ Invalid command. Type 'help' for available commands.",
    "exiting_interactive": "Exiting interactive mode...",
    "connection_status": "📊 Connection Status:",
    "connected_status": "✅ Connected to AWS IoT Core",
    "disconnected_status": "❌ Not connected",
    "active_subscriptions": "📥 Active Subscriptions:",
    "no_subscriptions": "   No active subscriptions",
    "message_history": "📜 Message History:",
    "no_messages": "   No messages yet",
    "no_messages_received": "   No messages received yet",
    "sent_messages": "📤 Sent Messages:",
    "received_messages": "📥 Received Messages:",
    "connection_diagnostics": "🔍 Connection Diagnostics:",
    "connected_label": "Connected",
    "subscriptions_label": "Subscriptions",
    "messages_received_label": "Messages received",
    "not_set": "Not set",
    "enter_topic_subscribe": "Enter topic to subscribe to:",
    "enter_qos_level": "Enter QoS level (0 or 1, default 0):",
    "enter_topic_publish": "Enter topic to publish to:",
    "enter_message": "Enter message:",
    "client_id_prompt": "Enter custom Client ID (or press Enter for auto-generated): ",
    "client_id_auto_generated": "Auto-generated Client ID",
    "client_id_custom": "Custom Client ID",
    "client_id_invalid": "❌ Invalid Client ID. Must be 1-128 characters, alphanumeric, hyphens, and underscores only.",
    "client_id_guidelines": "💡 Client ID Guidelines:",
    "client_id_rules": [
        "• Must be unique per connection",
        "• 1-128 characters allowed",
        "• Use alphanumeric, hyphens (-), and underscores (_)",
        "• Avoid spaces and special characters",
        "• Example: my-device-001, sensor_temp_01"
    ],
    "mqtt_version_selection": "🔧 MQTT Version Selection:",
    "mqtt311_description": "Standard, widely supported",
    "mqtt5_description": "Enhanced features, properties support",
    "select_mqtt_version": "Select MQTT version (1-2): ",
    "selected_mqtt311": "✅ Selected MQTT 3.1.1",
    "selected_mqtt5": "✅ Selected MQTT 5.0",
    "invalid_mqtt_version": "❌ Invalid selection. Please select 1 or 2.",
    "mqtt_version_label": "MQTT Version",
    "mqtt5_not_supported": "⚠️  MQTT 5.0 not supported by current SDK version:",
    "falling_back_mqtt311": "🔄 Falling back to MQTT 3.1.1"
}